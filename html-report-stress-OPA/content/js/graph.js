/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 15.0, "minX": 0.0, "maxY": 8385.0, "series": [{"data": [[0.0, 15.0], [0.1, 30.0], [0.2, 43.0], [0.3, 53.0], [0.4, 63.0], [0.5, 71.0], [0.6, 79.0], [0.7, 87.0], [0.8, 95.0], [0.9, 103.0], [1.0, 112.0], [1.1, 120.0], [1.2, 127.0], [1.3, 135.0], [1.4, 143.0], [1.5, 151.0], [1.6, 160.0], [1.7, 168.0], [1.8, 177.0], [1.9, 186.0], [2.0, 195.0], [2.1, 204.0], [2.2, 214.0], [2.3, 223.0], [2.4, 233.0], [2.5, 243.0], [2.6, 254.0], [2.7, 265.0], [2.8, 276.0], [2.9, 287.0], [3.0, 300.0], [3.1, 312.0], [3.2, 325.0], [3.3, 338.0], [3.4, 351.0], [3.5, 365.0], [3.6, 377.0], [3.7, 390.0], [3.8, 404.0], [3.9, 417.0], [4.0, 430.0], [4.1, 442.0], [4.2, 458.0], [4.3, 472.0], [4.4, 488.0], [4.5, 504.0], [4.6, 520.0], [4.7, 536.0], [4.8, 551.0], [4.9, 568.0], [5.0, 580.0], [5.1, 592.0], [5.2, 601.0], [5.3, 611.0], [5.4, 621.0], [5.5, 634.0], [5.6, 648.0], [5.7, 660.0], [5.8, 671.0], [5.9, 683.0], [6.0, 694.0], [6.1, 708.0], [6.2, 724.0], [6.3, 743.0], [6.4, 767.0], [6.5, 788.0], [6.6, 804.0], [6.7, 819.0], [6.8, 829.0], [6.9, 840.0], [7.0, 852.0], [7.1, 864.0], [7.2, 877.0], [7.3, 888.0], [7.4, 902.0], [7.5, 916.0], [7.6, 933.0], [7.7, 949.0], [7.8, 967.0], [7.9, 980.0], [8.0, 993.0], [8.1, 1012.0], [8.2, 1037.0], [8.3, 1058.0], [8.4, 1078.0], [8.5, 1092.0], [8.6, 1106.0], [8.7, 1129.0], [8.8, 1178.0], [8.9, 1226.0], [9.0, 1269.0], [9.1, 1288.0], [9.2, 1305.0], [9.3, 1318.0], [9.4, 1333.0], [9.5, 1350.0], [9.6, 1375.0], [9.7, 1399.0], [9.8, 1423.0], [9.9, 1448.0], [10.0, 1480.0], [10.1, 1503.0], [10.2, 1538.0], [10.3, 1642.0], [10.4, 1661.0], [10.5, 1675.0], [10.6, 1691.0], [10.7, 1712.0], [10.8, 1733.0], [10.9, 1753.0], [11.0, 1768.0], [11.1, 1783.0], [11.2, 1796.0], [11.3, 1806.0], [11.4, 1813.0], [11.5, 1819.0], [11.6, 1825.0], [11.7, 1831.0], [11.8, 1836.0], [11.9, 1842.0], [12.0, 1846.0], [12.1, 1851.0], [12.2, 1856.0], [12.3, 1861.0], [12.4, 1865.0], [12.5, 1870.0], [12.6, 1873.0], [12.7, 1877.0], [12.8, 1881.0], [12.9, 1884.0], [13.0, 1887.0], [13.1, 1890.0], [13.2, 1893.0], [13.3, 1897.0], [13.4, 1900.0], [13.5, 1902.0], [13.6, 1905.0], [13.7, 1908.0], [13.8, 1911.0], [13.9, 1913.0], [14.0, 1916.0], [14.1, 1918.0], [14.2, 1921.0], [14.3, 1923.0], [14.4, 1926.0], [14.5, 1928.0], [14.6, 1930.0], [14.7, 1933.0], [14.8, 1935.0], [14.9, 1937.0], [15.0, 1939.0], [15.1, 1941.0], [15.2, 1943.0], [15.3, 1945.0], [15.4, 1947.0], [15.5, 1948.0], [15.6, 1950.0], [15.7, 1952.0], [15.8, 1954.0], [15.9, 1956.0], [16.0, 1958.0], [16.1, 1960.0], [16.2, 1962.0], [16.3, 1963.0], [16.4, 1965.0], [16.5, 1967.0], [16.6, 1969.0], [16.7, 1970.0], [16.8, 1972.0], [16.9, 1974.0], [17.0, 1976.0], [17.1, 1977.0], [17.2, 1979.0], [17.3, 1981.0], [17.4, 1982.0], [17.5, 1984.0], [17.6, 1985.0], [17.7, 1987.0], [17.8, 1988.0], [17.9, 1990.0], [18.0, 1992.0], [18.1, 1993.0], [18.2, 1995.0], [18.3, 1996.0], [18.4, 1998.0], [18.5, 1999.0], [18.6, 2001.0], [18.7, 2002.0], [18.8, 2004.0], [18.9, 2005.0], [19.0, 2007.0], [19.1, 2008.0], [19.2, 2010.0], [19.3, 2011.0], [19.4, 2012.0], [19.5, 2014.0], [19.6, 2015.0], [19.7, 2017.0], [19.8, 2018.0], [19.9, 2019.0], [20.0, 2021.0], [20.1, 2022.0], [20.2, 2023.0], [20.3, 2024.0], [20.4, 2026.0], [20.5, 2027.0], [20.6, 2029.0], [20.7, 2030.0], [20.8, 2031.0], [20.9, 2032.0], [21.0, 2034.0], [21.1, 2035.0], [21.2, 2036.0], [21.3, 2038.0], [21.4, 2039.0], [21.5, 2040.0], [21.6, 2042.0], [21.7, 2043.0], [21.8, 2044.0], [21.9, 2046.0], [22.0, 2047.0], [22.1, 2048.0], [22.2, 2049.0], [22.3, 2050.0], [22.4, 2052.0], [22.5, 2053.0], [22.6, 2054.0], [22.7, 2055.0], [22.8, 2057.0], [22.9, 2058.0], [23.0, 2059.0], [23.1, 2060.0], [23.2, 2061.0], [23.3, 2063.0], [23.4, 2064.0], [23.5, 2065.0], [23.6, 2066.0], [23.7, 2067.0], [23.8, 2068.0], [23.9, 2069.0], [24.0, 2071.0], [24.1, 2072.0], [24.2, 2073.0], [24.3, 2074.0], [24.4, 2075.0], [24.5, 2076.0], [24.6, 2077.0], [24.7, 2078.0], [24.8, 2079.0], [24.9, 2080.0], [25.0, 2081.0], [25.1, 2082.0], [25.2, 2083.0], [25.3, 2084.0], [25.4, 2085.0], [25.5, 2086.0], [25.6, 2087.0], [25.7, 2088.0], [25.8, 2089.0], [25.9, 2090.0], [26.0, 2091.0], [26.1, 2092.0], [26.2, 2093.0], [26.3, 2094.0], [26.4, 2095.0], [26.5, 2096.0], [26.6, 2097.0], [26.7, 2098.0], [26.8, 2099.0], [26.9, 2100.0], [27.0, 2101.0], [27.1, 2102.0], [27.2, 2103.0], [27.3, 2104.0], [27.4, 2104.0], [27.5, 2105.0], [27.6, 2106.0], [27.7, 2107.0], [27.8, 2108.0], [27.9, 2109.0], [28.0, 2110.0], [28.1, 2111.0], [28.2, 2112.0], [28.3, 2112.0], [28.4, 2113.0], [28.5, 2114.0], [28.6, 2115.0], [28.7, 2116.0], [28.8, 2117.0], [28.9, 2118.0], [29.0, 2119.0], [29.1, 2120.0], [29.2, 2121.0], [29.3, 2122.0], [29.4, 2123.0], [29.5, 2124.0], [29.6, 2125.0], [29.7, 2126.0], [29.8, 2127.0], [29.9, 2128.0], [30.0, 2129.0], [30.1, 2129.0], [30.2, 2130.0], [30.3, 2131.0], [30.4, 2132.0], [30.5, 2133.0], [30.6, 2134.0], [30.7, 2135.0], [30.8, 2136.0], [30.9, 2137.0], [31.0, 2138.0], [31.1, 2139.0], [31.2, 2140.0], [31.3, 2141.0], [31.4, 2142.0], [31.5, 2143.0], [31.6, 2144.0], [31.7, 2145.0], [31.8, 2147.0], [31.9, 2148.0], [32.0, 2149.0], [32.1, 2150.0], [32.2, 2151.0], [32.3, 2152.0], [32.4, 2153.0], [32.5, 2154.0], [32.6, 2155.0], [32.7, 2156.0], [32.8, 2157.0], [32.9, 2158.0], [33.0, 2159.0], [33.1, 2160.0], [33.2, 2161.0], [33.3, 2162.0], [33.4, 2163.0], [33.5, 2164.0], [33.6, 2165.0], [33.7, 2166.0], [33.8, 2167.0], [33.9, 2168.0], [34.0, 2169.0], [34.1, 2170.0], [34.2, 2171.0], [34.3, 2172.0], [34.4, 2173.0], [34.5, 2173.0], [34.6, 2174.0], [34.7, 2175.0], [34.8, 2176.0], [34.9, 2177.0], [35.0, 2178.0], [35.1, 2179.0], [35.2, 2180.0], [35.3, 2180.0], [35.4, 2181.0], [35.5, 2182.0], [35.6, 2183.0], [35.7, 2184.0], [35.8, 2184.0], [35.9, 2185.0], [36.0, 2186.0], [36.1, 2187.0], [36.2, 2188.0], [36.3, 2188.0], [36.4, 2189.0], [36.5, 2190.0], [36.6, 2191.0], [36.7, 2191.0], [36.8, 2192.0], [36.9, 2193.0], [37.0, 2194.0], [37.1, 2194.0], [37.2, 2195.0], [37.3, 2196.0], [37.4, 2197.0], [37.5, 2197.0], [37.6, 2198.0], [37.7, 2199.0], [37.8, 2199.0], [37.9, 2200.0], [38.0, 2201.0], [38.1, 2201.0], [38.2, 2202.0], [38.3, 2203.0], [38.4, 2204.0], [38.5, 2204.0], [38.6, 2205.0], [38.7, 2206.0], [38.8, 2206.0], [38.9, 2207.0], [39.0, 2208.0], [39.1, 2209.0], [39.2, 2209.0], [39.3, 2210.0], [39.4, 2211.0], [39.5, 2211.0], [39.6, 2212.0], [39.7, 2213.0], [39.8, 2213.0], [39.9, 2214.0], [40.0, 2215.0], [40.1, 2215.0], [40.2, 2216.0], [40.3, 2217.0], [40.4, 2218.0], [40.5, 2218.0], [40.6, 2219.0], [40.7, 2220.0], [40.8, 2220.0], [40.9, 2221.0], [41.0, 2222.0], [41.1, 2222.0], [41.2, 2223.0], [41.3, 2224.0], [41.4, 2225.0], [41.5, 2225.0], [41.6, 2226.0], [41.7, 2227.0], [41.8, 2228.0], [41.9, 2228.0], [42.0, 2229.0], [42.1, 2230.0], [42.2, 2230.0], [42.3, 2231.0], [42.4, 2232.0], [42.5, 2232.0], [42.6, 2233.0], [42.7, 2234.0], [42.8, 2234.0], [42.9, 2235.0], [43.0, 2236.0], [43.1, 2236.0], [43.2, 2237.0], [43.3, 2238.0], [43.4, 2239.0], [43.5, 2239.0], [43.6, 2240.0], [43.7, 2241.0], [43.8, 2242.0], [43.9, 2242.0], [44.0, 2243.0], [44.1, 2244.0], [44.2, 2244.0], [44.3, 2245.0], [44.4, 2246.0], [44.5, 2246.0], [44.6, 2247.0], [44.7, 2248.0], [44.8, 2249.0], [44.9, 2249.0], [45.0, 2250.0], [45.1, 2251.0], [45.2, 2252.0], [45.3, 2252.0], [45.4, 2253.0], [45.5, 2253.0], [45.6, 2254.0], [45.7, 2255.0], [45.8, 2256.0], [45.9, 2256.0], [46.0, 2257.0], [46.1, 2258.0], [46.2, 2259.0], [46.3, 2259.0], [46.4, 2260.0], [46.5, 2261.0], [46.6, 2261.0], [46.7, 2262.0], [46.8, 2263.0], [46.9, 2264.0], [47.0, 2264.0], [47.1, 2265.0], [47.2, 2266.0], [47.3, 2267.0], [47.4, 2267.0], [47.5, 2268.0], [47.6, 2269.0], [47.7, 2269.0], [47.8, 2270.0], [47.9, 2271.0], [48.0, 2272.0], [48.1, 2272.0], [48.2, 2273.0], [48.3, 2274.0], [48.4, 2275.0], [48.5, 2275.0], [48.6, 2276.0], [48.7, 2277.0], [48.8, 2277.0], [48.9, 2278.0], [49.0, 2279.0], [49.1, 2280.0], [49.2, 2280.0], [49.3, 2281.0], [49.4, 2282.0], [49.5, 2283.0], [49.6, 2283.0], [49.7, 2284.0], [49.8, 2285.0], [49.9, 2285.0], [50.0, 2286.0], [50.1, 2287.0], [50.2, 2288.0], [50.3, 2288.0], [50.4, 2289.0], [50.5, 2290.0], [50.6, 2290.0], [50.7, 2291.0], [50.8, 2292.0], [50.9, 2292.0], [51.0, 2293.0], [51.1, 2294.0], [51.2, 2294.0], [51.3, 2295.0], [51.4, 2296.0], [51.5, 2297.0], [51.6, 2297.0], [51.7, 2298.0], [51.8, 2299.0], [51.9, 2299.0], [52.0, 2300.0], [52.1, 2301.0], [52.2, 2301.0], [52.3, 2302.0], [52.4, 2303.0], [52.5, 2304.0], [52.6, 2304.0], [52.7, 2305.0], [52.8, 2306.0], [52.9, 2306.0], [53.0, 2307.0], [53.1, 2308.0], [53.2, 2308.0], [53.3, 2309.0], [53.4, 2310.0], [53.5, 2311.0], [53.6, 2311.0], [53.7, 2312.0], [53.8, 2313.0], [53.9, 2313.0], [54.0, 2314.0], [54.1, 2315.0], [54.2, 2315.0], [54.3, 2316.0], [54.4, 2317.0], [54.5, 2318.0], [54.6, 2318.0], [54.7, 2319.0], [54.8, 2320.0], [54.9, 2321.0], [55.0, 2322.0], [55.1, 2322.0], [55.2, 2323.0], [55.3, 2324.0], [55.4, 2324.0], [55.5, 2325.0], [55.6, 2326.0], [55.7, 2327.0], [55.8, 2328.0], [55.9, 2328.0], [56.0, 2329.0], [56.1, 2330.0], [56.2, 2331.0], [56.3, 2332.0], [56.4, 2332.0], [56.5, 2333.0], [56.6, 2334.0], [56.7, 2335.0], [56.8, 2336.0], [56.9, 2337.0], [57.0, 2338.0], [57.1, 2339.0], [57.2, 2340.0], [57.3, 2341.0], [57.4, 2342.0], [57.5, 2343.0], [57.6, 2344.0], [57.7, 2345.0], [57.8, 2345.0], [57.9, 2347.0], [58.0, 2348.0], [58.1, 2349.0], [58.2, 2350.0], [58.3, 2351.0], [58.4, 2352.0], [58.5, 2353.0], [58.6, 2354.0], [58.7, 2355.0], [58.8, 2356.0], [58.9, 2356.0], [59.0, 2358.0], [59.1, 2359.0], [59.2, 2360.0], [59.3, 2361.0], [59.4, 2362.0], [59.5, 2363.0], [59.6, 2365.0], [59.7, 2366.0], [59.8, 2367.0], [59.9, 2368.0], [60.0, 2369.0], [60.1, 2371.0], [60.2, 2372.0], [60.3, 2373.0], [60.4, 2374.0], [60.5, 2376.0], [60.6, 2377.0], [60.7, 2378.0], [60.8, 2380.0], [60.9, 2381.0], [61.0, 2382.0], [61.1, 2384.0], [61.2, 2385.0], [61.3, 2387.0], [61.4, 2388.0], [61.5, 2390.0], [61.6, 2391.0], [61.7, 2393.0], [61.8, 2395.0], [61.9, 2396.0], [62.0, 2398.0], [62.1, 2400.0], [62.2, 2402.0], [62.3, 2403.0], [62.4, 2405.0], [62.5, 2407.0], [62.6, 2409.0], [62.7, 2411.0], [62.8, 2412.0], [62.9, 2414.0], [63.0, 2416.0], [63.1, 2418.0], [63.2, 2420.0], [63.3, 2422.0], [63.4, 2424.0], [63.5, 2426.0], [63.6, 2428.0], [63.7, 2430.0], [63.8, 2432.0], [63.9, 2434.0], [64.0, 2436.0], [64.1, 2439.0], [64.2, 2441.0], [64.3, 2444.0], [64.4, 2446.0], [64.5, 2448.0], [64.6, 2451.0], [64.7, 2453.0], [64.8, 2456.0], [64.9, 2458.0], [65.0, 2460.0], [65.1, 2463.0], [65.2, 2465.0], [65.3, 2467.0], [65.4, 2470.0], [65.5, 2472.0], [65.6, 2475.0], [65.7, 2477.0], [65.8, 2480.0], [65.9, 2482.0], [66.0, 2485.0], [66.1, 2488.0], [66.2, 2490.0], [66.3, 2493.0], [66.4, 2496.0], [66.5, 2498.0], [66.6, 2501.0], [66.7, 2503.0], [66.8, 2506.0], [66.9, 2509.0], [67.0, 2511.0], [67.1, 2514.0], [67.2, 2517.0], [67.3, 2520.0], [67.4, 2523.0], [67.5, 2526.0], [67.6, 2529.0], [67.7, 2532.0], [67.8, 2536.0], [67.9, 2538.0], [68.0, 2541.0], [68.1, 2544.0], [68.2, 2547.0], [68.3, 2550.0], [68.4, 2553.0], [68.5, 2556.0], [68.6, 2559.0], [68.7, 2561.0], [68.8, 2564.0], [68.9, 2568.0], [69.0, 2571.0], [69.1, 2574.0], [69.2, 2577.0], [69.3, 2580.0], [69.4, 2582.0], [69.5, 2585.0], [69.6, 2588.0], [69.7, 2591.0], [69.8, 2594.0], [69.9, 2597.0], [70.0, 2600.0], [70.1, 2603.0], [70.2, 2606.0], [70.3, 2609.0], [70.4, 2612.0], [70.5, 2615.0], [70.6, 2619.0], [70.7, 2622.0], [70.8, 2624.0], [70.9, 2628.0], [71.0, 2631.0], [71.1, 2634.0], [71.2, 2637.0], [71.3, 2640.0], [71.4, 2643.0], [71.5, 2646.0], [71.6, 2648.0], [71.7, 2651.0], [71.8, 2654.0], [71.9, 2657.0], [72.0, 2660.0], [72.1, 2663.0], [72.2, 2665.0], [72.3, 2668.0], [72.4, 2671.0], [72.5, 2674.0], [72.6, 2677.0], [72.7, 2680.0], [72.8, 2683.0], [72.9, 2686.0], [73.0, 2689.0], [73.1, 2692.0], [73.2, 2694.0], [73.3, 2697.0], [73.4, 2700.0], [73.5, 2703.0], [73.6, 2705.0], [73.7, 2708.0], [73.8, 2711.0], [73.9, 2714.0], [74.0, 2717.0], [74.1, 2720.0], [74.2, 2722.0], [74.3, 2725.0], [74.4, 2728.0], [74.5, 2731.0], [74.6, 2734.0], [74.7, 2736.0], [74.8, 2739.0], [74.9, 2742.0], [75.0, 2745.0], [75.1, 2748.0], [75.2, 2751.0], [75.3, 2754.0], [75.4, 2756.0], [75.5, 2759.0], [75.6, 2762.0], [75.7, 2765.0], [75.8, 2767.0], [75.9, 2770.0], [76.0, 2773.0], [76.1, 2776.0], [76.2, 2779.0], [76.3, 2782.0], [76.4, 2785.0], [76.5, 2788.0], [76.6, 2792.0], [76.7, 2794.0], [76.8, 2797.0], [76.9, 2800.0], [77.0, 2804.0], [77.1, 2806.0], [77.2, 2810.0], [77.3, 2813.0], [77.4, 2816.0], [77.5, 2819.0], [77.6, 2822.0], [77.7, 2825.0], [77.8, 2828.0], [77.9, 2831.0], [78.0, 2835.0], [78.1, 2838.0], [78.2, 2841.0], [78.3, 2845.0], [78.4, 2848.0], [78.5, 2852.0], [78.6, 2855.0], [78.7, 2859.0], [78.8, 2863.0], [78.9, 2867.0], [79.0, 2870.0], [79.1, 2874.0], [79.2, 2877.0], [79.3, 2882.0], [79.4, 2885.0], [79.5, 2889.0], [79.6, 2893.0], [79.7, 2897.0], [79.8, 2901.0], [79.9, 2905.0], [80.0, 2909.0], [80.1, 2913.0], [80.2, 2917.0], [80.3, 2922.0], [80.4, 2926.0], [80.5, 2930.0], [80.6, 2935.0], [80.7, 2939.0], [80.8, 2944.0], [80.9, 2949.0], [81.0, 2954.0], [81.1, 2959.0], [81.2, 2964.0], [81.3, 2970.0], [81.4, 2976.0], [81.5, 2981.0], [81.6, 2988.0], [81.7, 2993.0], [81.8, 3000.0], [81.9, 3005.0], [82.0, 3012.0], [82.1, 3019.0], [82.2, 3025.0], [82.3, 3032.0], [82.4, 3039.0], [82.5, 3046.0], [82.6, 3053.0], [82.7, 3060.0], [82.8, 3068.0], [82.9, 3074.0], [83.0, 3083.0], [83.1, 3091.0], [83.2, 3100.0], [83.3, 3109.0], [83.4, 3118.0], [83.5, 3127.0], [83.6, 3135.0], [83.7, 3144.0], [83.8, 3154.0], [83.9, 3163.0], [84.0, 3172.0], [84.1, 3181.0], [84.2, 3190.0], [84.3, 3199.0], [84.4, 3208.0], [84.5, 3217.0], [84.6, 3227.0], [84.7, 3236.0], [84.8, 3245.0], [84.9, 3256.0], [85.0, 3267.0], [85.1, 3278.0], [85.2, 3289.0], [85.3, 3298.0], [85.4, 3308.0], [85.5, 3317.0], [85.6, 3327.0], [85.7, 3336.0], [85.8, 3345.0], [85.9, 3354.0], [86.0, 3363.0], [86.1, 3375.0], [86.2, 3384.0], [86.3, 3394.0], [86.4, 3404.0], [86.5, 3415.0], [86.6, 3425.0], [86.7, 3437.0], [86.8, 3448.0], [86.9, 3458.0], [87.0, 3470.0], [87.1, 3480.0], [87.2, 3491.0], [87.3, 3501.0], [87.4, 3511.0], [87.5, 3522.0], [87.6, 3531.0], [87.7, 3539.0], [87.8, 3548.0], [87.9, 3556.0], [88.0, 3564.0], [88.1, 3570.0], [88.2, 3576.0], [88.3, 3582.0], [88.4, 3586.0], [88.5, 3591.0], [88.6, 3596.0], [88.7, 3601.0], [88.8, 3604.0], [88.9, 3608.0], [89.0, 3612.0], [89.1, 3616.0], [89.2, 3619.0], [89.3, 3623.0], [89.4, 3627.0], [89.5, 3630.0], [89.6, 3634.0], [89.7, 3637.0], [89.8, 3640.0], [89.9, 3644.0], [90.0, 3647.0], [90.1, 3650.0], [90.2, 3653.0], [90.3, 3657.0], [90.4, 3660.0], [90.5, 3663.0], [90.6, 3666.0], [90.7, 3669.0], [90.8, 3672.0], [90.9, 3675.0], [91.0, 3678.0], [91.1, 3681.0], [91.2, 3684.0], [91.3, 3687.0], [91.4, 3690.0], [91.5, 3693.0], [91.6, 3696.0], [91.7, 3698.0], [91.8, 3702.0], [91.9, 3705.0], [92.0, 3708.0], [92.1, 3710.0], [92.2, 3714.0], [92.3, 3717.0], [92.4, 3719.0], [92.5, 3722.0], [92.6, 3725.0], [92.7, 3728.0], [92.8, 3731.0], [92.9, 3734.0], [93.0, 3737.0], [93.1, 3740.0], [93.2, 3743.0], [93.3, 3746.0], [93.4, 3749.0], [93.5, 3752.0], [93.6, 3755.0], [93.7, 3758.0], [93.8, 3761.0], [93.9, 3764.0], [94.0, 3767.0], [94.1, 3770.0], [94.2, 3773.0], [94.3, 3776.0], [94.4, 3779.0], [94.5, 3782.0], [94.6, 3785.0], [94.7, 3789.0], [94.8, 3792.0], [94.9, 3796.0], [95.0, 3799.0], [95.1, 3803.0], [95.2, 3807.0], [95.3, 3810.0], [95.4, 3814.0], [95.5, 3817.0], [95.6, 3821.0], [95.7, 3825.0], [95.8, 3830.0], [95.9, 3834.0], [96.0, 3839.0], [96.1, 3844.0], [96.2, 3849.0], [96.3, 3854.0], [96.4, 3860.0], [96.5, 3864.0], [96.6, 3869.0], [96.7, 3874.0], [96.8, 3880.0], [96.9, 3885.0], [97.0, 3891.0], [97.1, 3897.0], [97.2, 3904.0], [97.3, 3911.0], [97.4, 3918.0], [97.5, 3925.0], [97.6, 3933.0], [97.7, 3942.0], [97.8, 3951.0], [97.9, 3960.0], [98.0, 3970.0], [98.1, 3980.0], [98.2, 3992.0], [98.3, 4005.0], [98.4, 4021.0], [98.5, 4036.0], [98.6, 4051.0], [98.7, 4069.0], [98.8, 4088.0], [98.9, 4107.0], [99.0, 4127.0], [99.1, 4146.0], [99.2, 4168.0], [99.3, 4194.0], [99.4, 4227.0], [99.5, 4270.0], [99.6, 4317.0], [99.7, 4405.0], [99.8, 4483.0], [99.9, 4603.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 50088.0, "series": [{"data": [[0.0, 3041.0], [600.0, 3037.0], [700.0, 1903.0], [800.0, 2866.0], [900.0, 2322.0], [1000.0, 1849.0], [1100.0, 1008.0], [1200.0, 1173.0], [1300.0, 1892.0], [1400.0, 1363.0], [1500.0, 599.0], [1600.0, 1369.0], [1700.0, 2089.0], [1800.0, 7688.0], [1900.0, 18127.0], [2000.0, 29695.0], [2100.0, 38824.0], [2200.0, 50088.0], [2300.0, 36070.0], [2400.0, 15896.0], [2500.0, 12126.0], [2600.0, 12099.0], [2700.0, 12360.0], [2800.0, 10313.0], [2900.0, 7183.0], [3000.0, 4976.0], [3100.0, 3929.0], [3200.0, 3567.0], [3300.0, 3680.0], [3400.0, 3319.0], [3500.0, 4945.0], [3600.0, 10854.0], [3700.0, 11631.0], [3800.0, 7548.0], [3900.0, 3970.0], [4000.0, 2150.0], [4100.0, 1626.0], [4200.0, 870.0], [4300.0, 462.0], [4500.0, 279.0], [4400.0, 444.0], [4600.0, 192.0], [4800.0, 6.0], [4700.0, 131.0], [5100.0, 4.0], [5000.0, 2.0], [4900.0, 1.0], [5200.0, 1.0], [5300.0, 2.0], [6600.0, 1.0], [6800.0, 1.0], [6700.0, 3.0], [6900.0, 3.0], [7100.0, 7.0], [7000.0, 2.0], [7200.0, 1.0], [7300.0, 2.0], [7400.0, 1.0], [8100.0, 1.0], [8000.0, 1.0], [8300.0, 1.0], [100.0, 4213.0], [200.0, 3381.0], [300.0, 2741.0], [400.0, 2498.0], [500.0, 2523.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 8300.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 15868.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1.500ms"], [2, "Requests having \nresponse time > 1.500ms"], [3, "Requests in error"]], "maxY": 248185.0, "series": [{"data": [[0.0, 15868.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 18853.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1.500ms", "isController": false}, {"data": [[2.0, 248185.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1.500ms", "isController": false}, {"data": [[3.0, 72043.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 106.06886145404629, "minX": 1.62749718E12, "maxY": 1000.0, "series": [{"data": [[1.62749808E12, 969.0400398530415], [1.62749778E12, 1000.0], [1.62749748E12, 1000.0], [1.62749718E12, 106.06886145404629], [1.62749784E12, 1000.0], [1.62749754E12, 1000.0], [1.62749724E12, 433.10332716492155], [1.6274979E12, 1000.0], [1.6274976E12, 1000.0], [1.6274973E12, 910.7385604542438], [1.62749796E12, 1000.0], [1.62749766E12, 1000.0], [1.62749736E12, 1000.0], [1.62749802E12, 1000.0], [1.62749772E12, 1000.0], [1.62749742E12, 1000.0]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.62749808E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 24.690476190476193, "minX": 1.0, "maxY": 2962.056603773585, "series": [{"data": [[2.0, 2826.0], [5.0, 421.3181818181818], [6.0, 131.66666666666666], [7.0, 27.096774193548388], [8.0, 28.518518518518515], [9.0, 32.72727272727273], [10.0, 285.2368421052631], [11.0, 116.8108108108108], [12.0, 35.33333333333333], [13.0, 170.60526315789474], [14.0, 47.05714285714286], [15.0, 33.24390243902438], [16.0, 240.3846153846154], [17.0, 112.5263157894737], [18.0, 55.8421052631579], [19.0, 24.690476190476193], [20.0, 72.46808510638297], [21.0, 62.372549019607845], [22.0, 71.82978723404253], [23.0, 55.70212765957446], [24.0, 373.72727272727275], [25.0, 64.33999999999999], [26.0, 67.625], [27.0, 216.85416666666669], [28.0, 74.63829787234042], [29.0, 70.76470588235291], [30.0, 72.02127659574465], [31.0, 68.23999999999998], [32.0, 273.59016393442624], [33.0, 123.98076923076923], [34.0, 68.56666666666668], [35.0, 76.28301886792454], [36.0, 178.2238805970149], [37.0, 122.18181818181819], [38.0, 72.28571428571429], [39.0, 136.18867924528303], [40.0, 72.78333333333332], [41.0, 142.21818181818185], [42.0, 84.98461538461537], [43.0, 280.61224489795916], [44.0, 88.51612903225808], [45.0, 97.57575757575756], [46.0, 225.47169811320754], [47.0, 89.64285714285712], [48.0, 98.7090909090909], [49.0, 99.64615384615385], [50.0, 99.13559322033899], [51.0, 99.15873015873017], [52.0, 96.4313725490196], [53.0, 229.14893617021275], [54.0, 117.6056338028169], [55.0, 401.59649122807014], [56.0, 146.55882352941177], [57.0, 140.86792452830187], [58.0, 137.41428571428574], [59.0, 104.4318181818182], [60.0, 246.2181818181818], [61.0, 182.23076923076925], [62.0, 102.82142857142856], [63.0, 143.54929577464787], [64.0, 112.11475409836068], [65.0, 109.27906976744187], [66.0, 163.40000000000003], [67.0, 388.1111111111112], [68.0, 126.6792452830189], [69.0, 214.5753424657534], [70.0, 123.87234042553193], [71.0, 209.6857142857143], [72.0, 132.58823529411768], [73.0, 121.54901960784314], [74.0, 149.8227848101266], [75.0, 313.75925925925924], [76.0, 154.31111111111107], [77.0, 249.72881355932196], [78.0, 216.5362318840579], [79.0, 144.94444444444446], [80.0, 242.44000000000005], [81.0, 161.5892857142857], [82.0, 259.1538461538462], [83.0, 201.0307692307692], [84.0, 174.75806451612902], [85.0, 309.3404255319149], [86.0, 142.43076923076922], [87.0, 249.65116279069773], [88.0, 136.2], [89.0, 263.19117647058823], [90.0, 196.55072463768118], [91.0, 132.08163265306123], [92.0, 184.0], [93.0, 348.984375], [94.0, 170.24137931034483], [95.0, 177.4666666666667], [96.0, 182.48888888888885], [97.0, 220.71666666666664], [98.0, 382.24285714285713], [99.0, 191.2586206896551], [100.0, 257.8], [101.0, 212.98245614035088], [102.0, 226.43999999999994], [103.0, 202.20833333333326], [104.0, 166.6779661016949], [105.0, 220.5405405405406], [106.0, 401.19999999999993], [107.0, 295.99999999999994], [108.0, 204.77586206896552], [109.0, 192.90140845070422], [110.0, 185.44897959183672], [111.0, 406.97183098591546], [112.0, 262.07692307692315], [113.0, 269.50000000000006], [114.0, 180.4915254237288], [115.0, 254.1860465116279], [116.0, 244.0185185185185], [117.0, 391.8], [118.0, 266.2602739726027], [119.0, 217.6481481481481], [120.0, 274.5862068965517], [121.0, 294.70175438596493], [122.0, 252.41237113402073], [123.0, 162.15555555555557], [124.0, 213.40425531914886], [125.0, 401.7121212121212], [126.0, 266.3684210526315], [127.0, 307.2456140350877], [128.0, 215.35714285714283], [129.0, 371.34999999999997], [130.0, 288.9733333333333], [131.0, 287.6666666666667], [132.0, 215.0606060606061], [133.0, 264.96551724137925], [134.0, 248.89285714285717], [135.0, 479.9746835443038], [136.0, 263.8194444444445], [137.0, 183.7906976744186], [138.0, 378.2199999999999], [139.0, 306.31249999999994], [140.0, 330.74725274725273], [141.0, 266.32467532467524], [142.0, 202.45454545454547], [143.0, 227.69491525423726], [144.0, 393.78461538461534], [145.0, 451.7368421052631], [146.0, 266.17391304347825], [147.0, 400.9701492537312], [148.0, 415.4626865671642], [149.0, 328.1733333333334], [150.0, 204.2592592592593], [151.0, 314.85416666666663], [152.0, 313.60937499999994], [153.0, 342.4561403508771], [154.0, 341.13953488372096], [155.0, 289.78], [156.0, 310.828125], [157.0, 215.0454545454545], [158.0, 500.241935483871], [159.0, 337.8947368421053], [160.0, 269.2784810126582], [161.0, 269.625], [162.0, 574.9000000000001], [163.0, 261.8095238095238], [164.0, 147.609756097561], [165.0, 420.5774647887324], [166.0, 519.1372549019608], [167.0, 390.4571428571427], [168.0, 315.0350877192983], [169.0, 303.64000000000004], [170.0, 460.47058823529426], [171.0, 278.3898305084746], [172.0, 211.8222222222222], [173.0, 443.0754716981131], [174.0, 499.07142857142856], [175.0, 376.4831460674158], [176.0, 384.9375], [177.0, 241.47368421052624], [178.0, 346.6071428571429], [179.0, 442.43750000000006], [180.0, 401.12857142857155], [181.0, 518.2203389830509], [182.0, 398.52702702702703], [183.0, 271.74999999999994], [184.0, 240.07272727272735], [185.0, 285.0923076923076], [186.0, 535.8852459016393], [187.0, 292.6451612903226], [188.0, 248.3648648648649], [189.0, 409.49230769230763], [190.0, 451.40983606557364], [191.0, 408.8823529411765], [192.0, 644.3076923076923], [193.0, 318.0769230769232], [194.0, 426.07058823529394], [195.0, 204.6545454545454], [196.0, 501.2686567164178], [197.0, 380.49999999999994], [198.0, 551.1515151515152], [199.0, 484.9855072463768], [200.0, 462.13000000000005], [201.0, 341.31249999999994], [202.0, 233.469387755102], [203.0, 337.8064516129034], [204.0, 218.78260869565213], [205.0, 600.9838709677421], [206.0, 593.5151515151513], [207.0, 445.69318181818176], [208.0, 373.7586206896552], [209.0, 319.03921568627453], [210.0, 320.6153846153847], [211.0, 355.1803278688525], [212.0, 473.7457627118645], [213.0, 477.9516129032256], [214.0, 286.2105263157895], [215.0, 626.5172413793103], [216.0, 565.8823529411767], [217.0, 571.3424657534247], [218.0, 329.26027397260276], [219.0, 232.92156862745097], [220.0, 566.1186440677967], [221.0, 409.4489795918367], [222.0, 245.89999999999998], [223.0, 644.101265822785], [224.0, 605.4000000000001], [225.0, 224.39655172413794], [226.0, 473.57894736842115], [227.0, 471.3488372093023], [228.0, 680.7432432432435], [229.0, 399.75], [230.0, 289.6346153846153], [231.0, 437.00000000000006], [232.0, 616.4615384615388], [233.0, 644.4074074074074], [234.0, 575.1458333333334], [235.0, 412.4444444444444], [236.0, 333.5999999999999], [237.0, 326.527027027027], [238.0, 412.2765957446809], [239.0, 691.857142857143], [240.0, 549.2333333333333], [241.0, 469.1296296296296], [242.0, 653.7532467532467], [243.0, 281.2236842105263], [244.0, 394.40816326530614], [245.0, 669.4814814814814], [246.0, 592.1147540983605], [247.0, 528.808080808081], [248.0, 513.6727272727273], [249.0, 461.49152542372894], [250.0, 413.6875], [251.0, 339.59322033898303], [252.0, 483.9836065573769], [253.0, 378.3148148148148], [254.0, 583.5294117647059], [255.0, 761.8840579710145], [257.0, 582.3421052631578], [256.0, 783.2537313432837], [258.0, 576.3255813953486], [259.0, 360.40350877192986], [260.0, 341.0781249999999], [261.0, 384.51162790697686], [262.0, 747.0862068965514], [263.0, 680.2941176470588], [264.0, 498.08695652173924], [270.0, 593.8627450980392], [271.0, 807.9870129870129], [268.0, 337.95384615384614], [269.0, 418.01694915254245], [265.0, 447.66153846153844], [266.0, 768.8965517241381], [267.0, 344.3255813953489], [273.0, 407.8823529411764], [272.0, 759.1066666666667], [274.0, 309.75438596491233], [275.0, 492.17307692307696], [276.0, 744.5081967213113], [277.0, 604.689189189189], [278.0, 663.2962962962963], [279.0, 395.5576923076922], [280.0, 353.53333333333336], [286.0, 389.0196078431373], [287.0, 592.8461538461538], [284.0, 461.4468085106384], [285.0, 419.6], [281.0, 553.5624999999998], [282.0, 641.6451612903226], [283.0, 622.646153846154], [289.0, 736.6336633663364], [288.0, 770.470588235294], [290.0, 381.02898550724643], [291.0, 703.8518518518518], [292.0, 668.0526315789476], [293.0, 547.8923076923078], [294.0, 464.1875], [295.0, 792.0000000000001], [296.0, 587.8571428571431], [302.0, 761.2083333333334], [303.0, 613.1168831168832], [300.0, 687.9784946236559], [301.0, 586.1923076923076], [297.0, 442.93749999999994], [298.0, 514.5128205128204], [299.0, 714.9014084507043], [305.0, 441.33928571428567], [304.0, 461.5531914893618], [306.0, 643.7288135593218], [307.0, 571.4444444444445], [308.0, 717.377049180328], [309.0, 681.0454545454545], [310.0, 790.0], [311.0, 764.6595744680851], [312.0, 457.4999999999999], [318.0, 636.8253968253969], [319.0, 499.1956521739131], [316.0, 685.0208333333336], [317.0, 772.557142857143], [313.0, 432.62745098039215], [314.0, 522.6078431372548], [315.0, 545.3488372093026], [321.0, 746.4459459459458], [320.0, 431.64406779661016], [322.0, 608.078431372549], [323.0, 879.0677966101695], [324.0, 570.0], [325.0, 423.2586206896552], [326.0, 693.3768115942028], [327.0, 685.795918367347], [328.0, 749.2105263157896], [334.0, 486.3333333333335], [335.0, 483.5000000000001], [332.0, 971.8615384615385], [333.0, 861.6607142857146], [329.0, 1156.4444444444446], [330.0, 479.7346938775511], [331.0, 415.1730769230769], [337.0, 768.04], [336.0, 936.9859154929574], [338.0, 468.6153846153846], [339.0, 434.57377049180326], [340.0, 665.8644067796608], [341.0, 988.1803278688521], [342.0, 737.6307692307693], [343.0, 521.3650793650793], [344.0, 520.0937499999999], [350.0, 504.1052631578948], [351.0, 829.4487179487178], [348.0, 620.6266666666671], [349.0, 513.6428571428569], [345.0, 794.3623188405796], [346.0, 997.6206896551721], [347.0, 1012.7534246575343], [353.0, 568.1632653061225], [352.0, 819.1803278688525], [354.0, 517.7384615384616], [355.0, 667.8571428571428], [356.0, 1049.3947368421054], [357.0, 824.2539682539681], [358.0, 503.99999999999994], [359.0, 953.9761904761906], [360.0, 621.2941176470586], [366.0, 657.8125], [367.0, 1070.4625], [364.0, 545.9531250000001], [365.0, 513.9591836734693], [361.0, 672.7555555555554], [362.0, 896.6986301369866], [363.0, 795.6629213483146], [369.0, 615.5593220338983], [368.0, 823.3593750000002], [370.0, 575.5178571428573], [371.0, 516.2448979591836], [372.0, 765.5846153846154], [373.0, 941.609756097561], [374.0, 858.9193548387096], [375.0, 653.2799999999999], [376.0, 883.1000000000003], [382.0, 1019.9795918367349], [383.0, 971.5576923076923], [380.0, 815.8939393939395], [381.0, 593.0166666666664], [377.0, 542.2391304347825], [378.0, 847.267857142857], [379.0, 833.280487804878], [385.0, 634.1538461538463], [384.0, 641.2666666666667], [386.0, 591.4230769230767], [387.0, 637.7027027027028], [388.0, 629.3170731707319], [389.0, 1013.6], [390.0, 763.645833333333], [391.0, 1248.9107142857142], [392.0, 1411.1578947368419], [398.0, 907.081632653061], [399.0, 1356.9807692307695], [396.0, 798.1818181818179], [397.0, 667.975], [393.0, 756.7586206896552], [394.0, 680.84126984127], [395.0, 1381.7894736842106], [401.0, 551.9285714285714], [400.0, 578.1964285714287], [402.0, 1160.7868852459019], [403.0, 1091.9302325581386], [404.0, 669.6774193548385], [405.0, 634.8918918918918], [406.0, 821.1639344262297], [407.0, 1134.6410256410259], [408.0, 725.1875], [414.0, 785.5849056603772], [415.0, 714.9473684210528], [412.0, 763.7142857142857], [413.0, 994.4050632911392], [409.0, 639.25], [410.0, 761.6734693877551], [411.0, 1091.781818181818], [417.0, 866.82], [416.0, 817.1458333333333], [418.0, 1093.1538461538464], [419.0, 842.0357142857146], [420.0, 984.5737704918032], [421.0, 918.9230769230768], [422.0, 1030.1538461538462], [423.0, 1127.7450980392157], [424.0, 1050.9761904761906], [430.0, 898.7678571428572], [431.0, 925.0238095238095], [428.0, 971.4489795918367], [429.0, 878.6279069767443], [425.0, 845.5151515151515], [426.0, 1137.5813953488375], [427.0, 1102.1315789473686], [433.0, 885.8478260869566], [432.0, 1266.1355932203392], [434.0, 1072.9574468085107], [435.0, 1103.411764705882], [436.0, 1042.1199999999997], [437.0, 1124.8771929824559], [438.0, 1115.181818181818], [439.0, 969.8510638297871], [440.0, 1072.708333333333], [446.0, 983.4791666666663], [447.0, 1127.5862068965516], [444.0, 1034.9999999999998], [445.0, 994.3333333333333], [441.0, 1217.2941176470588], [442.0, 1201.333333333333], [443.0, 1026.346153846154], [449.0, 984.8518518518518], [448.0, 1212.8490566037729], [450.0, 1157.3333333333337], [451.0, 1008.0961538461539], [452.0, 1047.5111111111112], [453.0, 1159.4807692307693], [454.0, 1100.6530612244899], [455.0, 1183.625], [456.0, 1004.913043478261], [462.0, 1140.1874999999998], [463.0, 1204.6666666666665], [460.0, 905.3829787234042], [461.0, 1281.0576923076922], [457.0, 1266.0204081632653], [458.0, 982.9000000000001], [459.0, 966.6818181818185], [465.0, 1076.3749999999998], [464.0, 1228.0000000000002], [466.0, 1278.6727272727271], [467.0, 1248.730769230769], [468.0, 996.6818181818184], [469.0, 1370.0350877192982], [470.0, 1074.063829787234], [471.0, 1255.8035714285718], [472.0, 1013.1860465116276], [478.0, 1262.0181818181818], [479.0, 1016.0227272727273], [476.0, 1287.290909090909], [477.0, 910.8958333333333], [473.0, 1263.43137254902], [474.0, 1128.6078431372546], [475.0, 1083.8541666666665], [481.0, 1101.0943396226414], [480.0, 1254.84], [482.0, 1178.8043478260865], [483.0, 1231.0208333333335], [484.0, 1146.8999999999999], [485.0, 1081.8936170212764], [486.0, 1188.686274509804], [487.0, 1287.1724137931037], [488.0, 1126.8333333333333], [494.0, 1254.627450980392], [495.0, 1233.3611111111109], [492.0, 1238.195652173913], [493.0, 1388.8627450980389], [489.0, 1280.7173913043475], [490.0, 1120.0612244897957], [491.0, 1171.9361702127662], [497.0, 1374.836734693878], [496.0, 1156.9428571428573], [498.0, 1250.2045454545453], [499.0, 1315.8333333333335], [500.0, 1212.1951219512198], [501.0, 1456.3255813953485], [502.0, 1216.560975609756], [503.0, 1278.3478260869565], [504.0, 1373.2553191489362], [510.0, 1428.814814814815], [511.0, 1370.3061224489795], [508.0, 1726.9302325581396], [509.0, 1294.8510638297873], [505.0, 1308.6315789473683], [506.0, 1426.7560975609754], [507.0, 1290.473684210526], [515.0, 1115.2391304347825], [512.0, 1547.1372549019607], [526.0, 1159.6888888888886], [527.0, 1415.1320754716978], [524.0, 1309.2916666666667], [525.0, 1242.8913043478262], [522.0, 1363.3061224489795], [523.0, 1331.4310344827588], [513.0, 1120.2340425531918], [514.0, 1526.470588235294], [516.0, 1294.0833333333333], [517.0, 1499.7962962962968], [518.0, 1558.301587301587], [519.0, 1280.0384615384617], [528.0, 1279.9821428571431], [542.0, 1255.714285714285], [543.0, 1334.4761904761901], [540.0, 1094.0000000000005], [541.0, 1153.8000000000002], [538.0, 1321.7592592592596], [539.0, 1389.679245283019], [536.0, 1319.156862745098], [537.0, 1261.4200000000003], [529.0, 1398.705882352941], [530.0, 1223.1777777777775], [531.0, 1386.4107142857142], [532.0, 1236.6041666666672], [533.0, 1169.395348837209], [534.0, 1284.9999999999998], [535.0, 1424.078431372549], [520.0, 1346.391304347826], [521.0, 1118.0], [547.0, 1396.081632653061], [544.0, 1368.2698412698412], [558.0, 1465.9791666666665], [559.0, 1449.8541666666665], [556.0, 1499.862745098039], [557.0, 1358.941176470588], [554.0, 1300.982142857143], [555.0, 1185.9807692307693], [545.0, 1254.470588235294], [546.0, 1475.134615384615], [548.0, 1385.633333333333], [549.0, 1285.2619047619046], [550.0, 1381.415094339623], [551.0, 1171.1999999999998], [560.0, 1305.2045454545453], [574.0, 1315.68085106383], [575.0, 1433.3703703703698], [572.0, 1380.8039215686274], [573.0, 1199.038461538462], [570.0, 1329.9375000000005], [571.0, 1443.0], [568.0, 1388.2608695652177], [569.0, 1638.6000000000001], [561.0, 1358.4067796610166], [562.0, 1268.409090909091], [563.0, 1474.5471698113208], [564.0, 1472.673469387755], [565.0, 1143.4166666666665], [566.0, 1358.4901960784314], [567.0, 1263.1999999999998], [552.0, 1228.8], [553.0, 1225.4375], [579.0, 1575.6250000000002], [576.0, 1472.9600000000007], [590.0, 1509.0185185185182], [591.0, 1325.2000000000003], [588.0, 1559.8461538461543], [589.0, 1293.9318181818182], [586.0, 1367.56], [587.0, 1506.137254901961], [577.0, 1527.3921568627452], [578.0, 1388.2278481012659], [580.0, 1300.0222222222221], [581.0, 1492.3076923076924], [582.0, 1212.5000000000002], [583.0, 1570.5800000000002], [592.0, 1471.068181818182], [606.0, 1530.466666666667], [607.0, 1473.7333333333333], [604.0, 1376.6938775510198], [605.0, 1528.9230769230767], [602.0, 1409.735849056604], [603.0, 1615.1224489795916], [600.0, 1285.574468085107], [601.0, 1434.1481481481485], [593.0, 1564.701754385965], [594.0, 1558.8], [595.0, 1307.6249999999998], [596.0, 1367.86], [597.0, 1424.6545454545453], [598.0, 1109.083333333333], [599.0, 1679.576271186441], [584.0, 1328.854166666667], [585.0, 1458.3518518518515], [611.0, 1308.5416666666667], [608.0, 1533.34693877551], [622.0, 1482.2608695652173], [623.0, 1621.145833333333], [620.0, 1526.9183673469388], [621.0, 1604.0392156862745], [618.0, 1432.3541666666665], [619.0, 1385.8727272727276], [609.0, 1336.5306122448983], [610.0, 1571.2407407407406], [612.0, 1657.5090909090902], [613.0, 1285.1874999999998], [614.0, 1334.46], [615.0, 1600.6964285714282], [624.0, 1376.020408163265], [638.0, 1675.4166666666665], [639.0, 1675.792452830189], [636.0, 1529.7333333333331], [637.0, 1719.0961538461534], [634.0, 1554.6818181818185], [635.0, 1706.0980392156864], [632.0, 1253.1063829787236], [633.0, 1532.1346153846152], [625.0, 1620.3404255319153], [626.0, 1603.0200000000007], [627.0, 1691.7399999999998], [628.0, 1426.2045454545455], [629.0, 1573.9272727272728], [630.0, 1421.8222222222223], [631.0, 1639.42], [616.0, 1411.395348837209], [617.0, 1596.3617021276596], [643.0, 1433.3409090909088], [640.0, 1505.2272727272725], [654.0, 1515.62], [655.0, 1725.653846153846], [652.0, 1677.5625000000002], [653.0, 1611.735849056604], [650.0, 1430.7708333333335], [651.0, 1652.6041666666667], [641.0, 1569.5471698113206], [642.0, 1729.4468085106382], [644.0, 1643.9245283018868], [645.0, 1579.115384615385], [646.0, 1598.0980392156862], [647.0, 1421.5624999999998], [656.0, 1520.8723404255315], [670.0, 2000.3658536585365], [671.0, 1841.7209302325577], [668.0, 1836.976744186046], [669.0, 1716.767441860465], [666.0, 1923.208333333333], [667.0, 1616.1777777777781], [664.0, 1596.075], [665.0, 1867.8297872340427], [657.0, 1728.2407407407413], [658.0, 1531.487804878049], [659.0, 1639.8200000000002], [660.0, 1445.1951219512196], [661.0, 1611.15], [662.0, 1799.822222222222], [663.0, 1684.470588235294], [648.0, 1655.0377358490566], [649.0, 1699.5510204081634], [675.0, 1675.4374999999998], [672.0, 1957.3333333333333], [686.0, 1732.7567567567569], [687.0, 1840.0555555555557], [684.0, 1921.018867924528], [685.0, 1603.1818181818185], [682.0, 1826.804347826087], [683.0, 1594.6046511627906], [673.0, 1715.8958333333337], [674.0, 1942.1176470588239], [676.0, 2090.785714285714], [677.0, 1787.7916666666667], [678.0, 1791.1458333333333], [679.0, 1828.7659574468087], [688.0, 1740.2619047619053], [702.0, 2000.755102040816], [703.0, 1859.0208333333333], [700.0, 1608.340909090909], [701.0, 1675.1627906976744], [698.0, 1901.4528301886794], [699.0, 1675.2380952380952], [696.0, 1682.6511627906975], [697.0, 1881.8235294117644], [689.0, 2066.020833333333], [690.0, 1929.537037037037], [691.0, 1735.2340425531916], [692.0, 1862.36170212766], [693.0, 1789.0], [694.0, 1957.3617021276596], [695.0, 1786.617021276596], [680.0, 1765.0566037735846], [681.0, 1662.6274509803925], [707.0, 1852.6274509803918], [704.0, 1857.2199999999998], [718.0, 1610.8297872340424], [719.0, 1773.7200000000003], [716.0, 1934.9361702127658], [717.0, 1843.4000000000003], [714.0, 1538.111111111111], [715.0, 1627.1400000000006], [705.0, 1938.1568627450977], [706.0, 1822.24], [708.0, 1639.7], [709.0, 1812.0000000000002], [710.0, 1661.8139534883724], [711.0, 1907.2083333333335], [720.0, 1791.3725490196082], [734.0, 1553.8095238095234], [735.0, 1947.965517241379], [732.0, 1757.4117647058822], [733.0, 1817.1136363636365], [730.0, 1836.6730769230767], [731.0, 1708.6999999999998], [728.0, 1866.8103448275867], [729.0, 1727.9499999999998], [721.0, 1941.24], [722.0, 1635.9148936170213], [723.0, 1854.2884615384612], [724.0, 1680.4634146341466], [725.0, 1898.1632653061224], [726.0, 1619.1599999999996], [727.0, 1858.7000000000003], [712.0, 1628.2291666666663], [713.0, 1838.0943396226419], [739.0, 1936.4716981132071], [736.0, 1671.3953488372097], [750.0, 1764.6415094339623], [751.0, 1752.5957446808509], [748.0, 1831.7333333333338], [749.0, 1993.5], [746.0, 1658.2619047619048], [747.0, 1951.181818181818], [737.0, 1838.0799999999997], [738.0, 1847.5576923076924], [740.0, 1739.2093023255816], [741.0, 1874.1730769230762], [742.0, 1731.6808510638293], [743.0, 1956.377358490566], [752.0, 1925.5769230769229], [766.0, 1932.6842105263158], [767.0, 1781.6136363636365], [764.0, 1888.277777777778], [765.0, 2021.9803921568625], [762.0, 2004.4897959183663], [763.0, 1806.705882352941], [760.0, 1717.191489361702], [761.0, 2016.3673469387757], [753.0, 1772.6666666666667], [754.0, 1847.0212765957444], [755.0, 2001.8518518518522], [756.0, 1680.0909090909088], [757.0, 1980.1960784313724], [758.0, 1750.630434782609], [759.0, 1752.9111111111113], [744.0, 1766.326086956522], [745.0, 1995.7636363636366], [771.0, 1811.7234042553193], [768.0, 1788.7291666666667], [782.0, 1784.5227272727277], [783.0, 2007.122448979592], [780.0, 1761.3953488372097], [781.0, 2122.3793103448274], [778.0, 1983.04], [779.0, 1911.952380952381], [769.0, 2076.2777777777783], [770.0, 2143.320754716981], [772.0, 2011.3725490196073], [773.0, 1846.7083333333335], [774.0, 2081.2962962962965], [775.0, 1814.1750000000004], [784.0, 1700.0454545454543], [798.0, 2044.5625], [799.0, 1946.826923076923], [796.0, 1908.0196078431368], [797.0, 1869.7608695652173], [794.0, 1855.2083333333337], [795.0, 2092.4339622641505], [792.0, 2031.1999999999998], [793.0, 2058.1621621621616], [785.0, 2010.5555555555557], [786.0, 1917.3695652173915], [787.0, 1978.6727272727271], [788.0, 1871.4893617021278], [789.0, 1979.9607843137246], [790.0, 1911.7708333333335], [791.0, 2007.6666666666663], [776.0, 2006.87037037037], [777.0, 1944.3773584905662], [803.0, 1893.0714285714284], [800.0, 2010.0769230769238], [814.0, 2275.7868852459023], [815.0, 1927.142857142857], [812.0, 2033.648648648649], [813.0, 2030.1632653061222], [810.0, 1951.7441860465112], [811.0, 1953.2558139534885], [801.0, 2084.705882352941], [802.0, 1983.4375000000002], [804.0, 2048.8846153846152], [805.0, 2013.3555555555556], [806.0, 1798.382978723404], [807.0, 2136.6666666666665], [816.0, 2251.302325581395], [830.0, 2436.4], [831.0, 2236.7777777777774], [828.0, 2205.7142857142853], [829.0, 2102.302325581396], [826.0, 2318.122448979592], [827.0, 2403.4347826086955], [824.0, 2211.4864864864867], [825.0, 2167.640000000001], [817.0, 2063.9500000000003], [818.0, 1974.8372093023256], [819.0, 2330.1162790697663], [820.0, 2140.2500000000005], [821.0, 2383.3333333333335], [822.0, 2192.525], [823.0, 2496.5128205128203], [808.0, 2209.72], [809.0, 1973.2380952380947], [835.0, 2227.704545454545], [832.0, 2234.53488372093], [846.0, 1995.978723404255], [847.0, 2444.7799999999997], [844.0, 2165.0208333333335], [845.0, 2255.0625], [842.0, 2325.1785714285716], [843.0, 2138.145833333334], [833.0, 2217.644444444444], [834.0, 2304.875000000001], [836.0, 2242.7999999999993], [837.0, 1999.2307692307695], [838.0, 2302.1818181818185], [839.0, 2216.895833333334], [848.0, 2060.0851063829787], [862.0, 2410.886363636364], [863.0, 2129.4], [860.0, 2088.944444444445], [861.0, 2343.5263157894738], [858.0, 2191.9387755102034], [859.0, 2254.4583333333326], [856.0, 2236.229166666666], [857.0, 2197.95744680851], [849.0, 2274.571428571428], [850.0, 2051.808510638298], [851.0, 1963.7209302325577], [852.0, 2182.5813953488378], [853.0, 1955.957446808511], [854.0, 2430.3269230769242], [855.0, 2207.686274509804], [840.0, 2127.5], [841.0, 2234.828124999999], [867.0, 2277.183673469387], [864.0, 2191.941176470588], [878.0, 2143.6382978723404], [879.0, 2218.1], [876.0, 2286.5245901639337], [877.0, 2216.8085106382973], [874.0, 2236.0816326530617], [875.0, 2090.0476190476193], [865.0, 2257.039215686275], [866.0, 1970.510638297873], [868.0, 2226.3541666666665], [869.0, 1987.6363636363635], [870.0, 2187.381818181818], [871.0, 2034.6428571428569], [880.0, 2175.714285714286], [894.0, 2014.2619047619044], [895.0, 2385.7999999999993], [892.0, 2219.4250000000006], [893.0, 2058.5454545454545], [890.0, 2316.403846153847], [891.0, 2304.584905660377], [888.0, 2330.7551020408155], [889.0, 2108.704545454545], [881.0, 2158.755102040816], [882.0, 2044.529411764706], [883.0, 2263.468085106383], [884.0, 2167.8235294117644], [885.0, 2190.291666666666], [886.0, 2004.7755102040815], [887.0, 2116.9318181818185], [872.0, 2127.8867924528304], [873.0, 2126.1162790697676], [899.0, 2286.847826086957], [896.0, 2161.7962962962974], [910.0, 2350.092592592592], [911.0, 2399.7254901960787], [908.0, 2456.129629629629], [909.0, 2154.8695652173915], [906.0, 2068.122448979592], [907.0, 2271.9069767441856], [897.0, 2171.6382978723404], [898.0, 2096.17391304348], [900.0, 2329.918367346938], [901.0, 2197.20930232558], [902.0, 2448.3469387755104], [903.0, 2148.612244897959], [912.0, 2340.6808510638302], [926.0, 2204.6428571428573], [927.0, 2171.191489361703], [924.0, 2187.9387755102034], [925.0, 2463.018867924528], [922.0, 2201.833333333333], [923.0, 2368.3260869565224], [920.0, 2470.0909090909086], [921.0, 2173.837209302326], [913.0, 2283.714285714285], [914.0, 2366.0400000000004], [915.0, 2200.4999999999995], [916.0, 2198.6829268292677], [917.0, 2498.0], [918.0, 2227.4912280701756], [919.0, 1996.232558139535], [904.0, 2252.363636363636], [905.0, 2540.1224489795927], [931.0, 2057.9767441860454], [928.0, 2224.021739130434], [942.0, 2516.907407407407], [943.0, 2264.7857142857147], [940.0, 2292.9361702127667], [941.0, 2256.590909090909], [938.0, 2339.6136363636356], [939.0, 2570.7021276595747], [929.0, 2233.960784313725], [930.0, 2361.888888888889], [932.0, 2587.6481481481487], [933.0, 2411.354166666666], [934.0, 2442.7551020408173], [935.0, 2295.6], [944.0, 2480.1090909090904], [958.0, 2506.4615384615386], [959.0, 2701.8536585365846], [956.0, 2414.6190476190473], [957.0, 2586.641025641026], [954.0, 2684.666666666666], [955.0, 2400.945945945945], [952.0, 2546.581395348838], [953.0, 2235.3846153846157], [945.0, 2401.1333333333337], [946.0, 2613.645833333333], [947.0, 2414.755555555555], [948.0, 2428.3902439024378], [949.0, 2530.423076923076], [950.0, 2358.7631578947357], [951.0, 2360.2000000000003], [936.0, 2381.897959183674], [937.0, 2442.127659574469], [963.0, 2943.844444444444], [960.0, 2547.871794871795], [974.0, 2512.428571428572], [975.0, 2439.6744186046512], [972.0, 2591.8888888888896], [973.0, 2839.999999999999], [970.0, 2614.1607142857147], [971.0, 2610.106382978724], [961.0, 2517.0425531914893], [962.0, 2598.3589743589737], [964.0, 2594.65909090909], [965.0, 2850.3541666666674], [966.0, 2594.534883720931], [967.0, 2555.254901960785], [976.0, 2577.333333333333], [990.0, 2619.130434782609], [991.0, 2904.644444444445], [988.0, 2962.056603773585], [989.0, 2648.0714285714294], [986.0, 2684.3055555555557], [987.0, 2652.825], [984.0, 2622.878048780488], [985.0, 2683.975609756098], [977.0, 2614.6153846153843], [978.0, 2664.371428571428], [979.0, 2807.5094339622638], [980.0, 2675.6410256410263], [981.0, 2621.175], [982.0, 2884.5609756097565], [983.0, 2794.222222222222], [968.0, 2802.591836734693], [969.0, 2637.810810810811], [995.0, 2823.51923076923], [992.0, 2689.0217391304345], [993.0, 2867.6964285714294], [994.0, 2665.975], [996.0, 2654.775510204081], [997.0, 2929.906976744185], [998.0, 2434.222222222222], [999.0, 2735.840909090909], [1000.0, 2578.5431030779687], [1.0, 2679.0]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[922.7461691679703, 2370.318733113706]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 1000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 127375.35, "minX": 1.62749718E12, "maxY": 754210.1833333333, "series": [{"data": [[1.62749808E12, 182399.85], [1.62749778E12, 219840.03333333333], [1.62749748E12, 268188.1], [1.62749718E12, 127375.35], [1.62749784E12, 264538.36666666664], [1.62749754E12, 238734.88333333333], [1.62749724E12, 285650.0833333333], [1.6274979E12, 222746.63333333333], [1.6274976E12, 267894.8], [1.6274973E12, 253682.46666666667], [1.62749796E12, 265035.5333333333], [1.62749766E12, 235282.56666666668], [1.62749736E12, 269633.2833333333], [1.62749802E12, 216764.06666666668], [1.62749772E12, 272689.68333333335], [1.62749742E12, 244477.48333333334]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.62749808E12, 457413.85], [1.62749778E12, 603789.7], [1.62749748E12, 691119.6], [1.62749718E12, 311465.25], [1.62749784E12, 663604.7], [1.62749754E12, 649619.3833333333], [1.62749724E12, 754210.1833333333], [1.6274979E12, 615296.9666666667], [1.6274976E12, 689638.4666666667], [1.6274973E12, 682232.8], [1.62749796E12, 675567.7], [1.62749766E12, 640761.0666666667], [1.62749736E12, 693654.6166666667], [1.62749802E12, 622531.7333333333], [1.62749772E12, 695534.5166666667], [1.62749742E12, 663690.15]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.62749808E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 209.06200274348356, "minX": 1.62749718E12, "maxY": 2844.5916595905283, "series": [{"data": [[1.62749808E12, 2422.977022230522], [1.62749778E12, 2844.5916595905283], [1.62749748E12, 2455.1013847675663], [1.62749718E12, 209.06200274348356], [1.62749784E12, 2565.4543308438538], [1.62749754E12, 2641.2370763362173], [1.62749724E12, 990.1249291891693], [1.6274979E12, 2786.019164892144], [1.6274976E12, 2470.1018503221644], [1.6274973E12, 2255.842100868382], [1.62749796E12, 2508.798718273027], [1.62749766E12, 2676.602284850638], [1.62749736E12, 2453.573933396298], [1.62749802E12, 2770.382274890177], [1.62749772E12, 2444.0975469920963], [1.62749742E12, 2589.0411570318824]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.62749808E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 206.4396890717879, "minX": 1.62749718E12, "maxY": 2838.8700820832128, "series": [{"data": [[1.62749808E12, 2416.6568902173285], [1.62749778E12, 2838.8700820832128], [1.62749748E12, 2449.264671942002], [1.62749718E12, 206.4396890717879], [1.62749784E12, 2559.1251609580313], [1.62749754E12, 2635.8454860349825], [1.62749724E12, 987.1469844027345], [1.6274979E12, 2780.272243310804], [1.6274976E12, 2463.7213365273305], [1.6274973E12, 2251.1941382765517], [1.62749796E12, 2501.156547769599], [1.62749766E12, 2671.122955192049], [1.62749736E12, 2447.888802200957], [1.62749802E12, 2764.3248993411403], [1.62749772E12, 2437.743232728625], [1.62749742E12, 2583.7018153727263]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.62749808E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.14732510288065803, "minX": 1.62749718E12, "maxY": 2.551610541727677, "series": [{"data": [[1.62749808E12, 0.6750731676941266], [1.62749778E12, 1.6962449287668662], [1.62749748E12, 0.6536432575008237], [1.62749718E12, 0.14732510288065803], [1.62749784E12, 0.4050562280024037], [1.62749754E12, 1.5937650721269851], [1.62749724E12, 1.1001170739076227], [1.6274979E12, 1.5933246921581248], [1.6274976E12, 0.8429291260531966], [1.6274973E12, 1.331454575818307], [1.62749796E12, 0.5886668353149506], [1.62749766E12, 1.4344772403982864], [1.62749736E12, 0.6668993553155624], [1.62749802E12, 2.551610541727677], [1.62749772E12, 0.661738809943078], [1.62749742E12, 1.2315351272477526]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.62749808E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 15.0, "minX": 1.62749718E12, "maxY": 8385.0, "series": [{"data": [[1.62749808E12, 4307.0], [1.62749778E12, 4144.0], [1.62749748E12, 4159.0], [1.62749718E12, 1048.0], [1.62749784E12, 4152.0], [1.62749754E12, 7298.0], [1.62749724E12, 1975.0], [1.6274979E12, 3827.0], [1.6274976E12, 8385.0], [1.6274973E12, 3495.0], [1.62749796E12, 4073.0], [1.62749766E12, 3368.0], [1.62749736E12, 3785.0], [1.62749802E12, 3828.0], [1.62749772E12, 3554.0], [1.62749742E12, 3776.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.62749808E12, 2988.0], [1.62749778E12, 2813.0], [1.62749748E12, 2753.0], [1.62749718E12, 444.0], [1.62749784E12, 3116.0], [1.62749754E12, 2616.0], [1.62749724E12, 1126.0], [1.6274979E12, 2592.7000000000007], [1.6274976E12, 2801.0], [1.6274973E12, 2737.0], [1.62749796E12, 3009.0], [1.62749766E12, 2578.0], [1.62749736E12, 2735.0], [1.62749802E12, 2823.0], [1.62749772E12, 2787.0], [1.62749742E12, 2701.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.62749808E12, 3416.6499999999996], [1.62749778E12, 3604.0], [1.62749748E12, 3125.9600000000064], [1.62749718E12, 729.6399999999994], [1.62749784E12, 3661.0], [1.62749754E12, 3230.6399999999994], [1.62749724E12, 1504.0], [1.6274979E12, 3288.369999999999], [1.6274976E12, 3199.0], [1.6274973E12, 3110.329999999998], [1.62749796E12, 3427.980000000003], [1.62749766E12, 3094.34], [1.62749736E12, 3163.0], [1.62749802E12, 3356.289999999999], [1.62749772E12, 3074.980000000003], [1.62749742E12, 3144.1899999999987]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.62749808E12, 3146.0], [1.62749778E12, 3203.0], [1.62749748E12, 2866.0], [1.62749718E12, 561.1999999999989], [1.62749784E12, 3341.0], [1.62749754E12, 2849.199999999999], [1.62749724E12, 1282.0], [1.6274979E12, 2858.0], [1.6274976E12, 2938.0], [1.6274973E12, 2902.0], [1.62749796E12, 3142.9500000000007], [1.62749766E12, 2813.699999999999], [1.62749736E12, 2864.0], [1.62749802E12, 2952.0], [1.62749772E12, 2883.0], [1.62749742E12, 2854.6499999999996]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.62749808E12, 134.0], [1.62749778E12, 70.0], [1.62749748E12, 100.0], [1.62749718E12, 15.0], [1.62749784E12, 41.0], [1.62749754E12, 42.0], [1.62749724E12, 31.0], [1.6274979E12, 35.0], [1.6274976E12, 65.0], [1.6274973E12, 32.0], [1.62749796E12, 146.0], [1.62749766E12, 34.0], [1.62749736E12, 145.0], [1.62749802E12, 27.0], [1.62749772E12, 39.0], [1.62749742E12, 38.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.62749808E12, 2315.0], [1.62749778E12, 2352.0], [1.62749748E12, 2240.0], [1.62749718E12, 162.0], [1.62749784E12, 2320.0], [1.62749754E12, 2265.0], [1.62749724E12, 732.0], [1.6274979E12, 2303.0], [1.6274976E12, 2253.0], [1.6274973E12, 1994.0], [1.62749796E12, 2340.0], [1.62749766E12, 2252.0], [1.62749736E12, 2231.5], [1.62749802E12, 2355.0], [1.62749772E12, 2242.0], [1.62749742E12, 2213.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.62749808E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 29.5, "minX": 32.0, "maxY": 4546.0, "series": [{"data": [[32.0, 29.5], [239.0, 2485.0], [248.0, 2531.0], [259.0, 2622.0], [257.0, 2508.5], [263.0, 2821.0], [280.0, 30.0], [277.0, 2401.0], [272.0, 2371.0], [285.0, 2338.0], [284.0, 2643.0], [291.0, 2576.0], [288.0, 2747.0], [302.0, 2883.0], [299.0, 2393.0], [294.0, 2817.0], [289.0, 2330.0], [293.0, 2515.0], [317.0, 2258.0], [311.0, 2359.0], [308.0, 2466.5], [307.0, 2419.0], [316.0, 2318.0], [312.0, 2426.0], [319.0, 2309.0], [313.0, 2434.0], [305.0, 2241.0], [304.0, 2465.0], [315.0, 2775.0], [332.0, 2333.0], [335.0, 2252.0], [334.0, 2236.0], [330.0, 2294.0], [331.0, 2451.0], [323.0, 2359.0], [333.0, 2234.0], [329.0, 2322.0], [322.0, 2294.0], [321.0, 2289.5], [325.0, 2335.0], [324.0, 2356.0], [327.0, 2298.0], [348.0, 2315.0], [347.0, 2289.0], [340.0, 2241.0], [341.0, 2240.5], [343.0, 2251.0], [342.0, 2260.0], [346.0, 2303.0], [337.0, 2235.0], [336.0, 2262.0], [338.0, 2293.0], [339.0, 2363.0], [349.0, 2298.0], [351.0, 2277.0], [350.0, 2273.0], [345.0, 2313.0], [344.0, 2279.0], [355.0, 2213.5], [352.0, 2207.0], [358.0, 2228.0], [359.0, 2284.5], [360.0, 2262.0], [365.0, 2294.0], [364.0, 2259.0], [367.0, 2332.0], [361.0, 2290.0], [356.0, 2256.0], [357.0, 2325.0], [353.0, 2258.0], [354.0, 2231.0], [363.0, 2227.0], [362.0, 2278.0], [382.0, 2150.0], [368.0, 752.0], [378.0, 2292.0], [379.0, 2257.0], [370.0, 2289.5], [369.0, 2369.0], [377.0, 2288.0], [375.0, 2262.0], [374.0, 2356.0], [373.0, 2312.0], [372.0, 2301.0], [381.0, 2275.0], [380.0, 2287.5], [371.0, 2313.0], [376.0, 2317.0], [383.0, 2129.0], [399.0, 1874.0], [387.0, 2217.0], [395.0, 2095.0], [389.0, 2222.0], [390.0, 2243.5], [388.0, 2291.0], [391.0, 2113.0], [386.0, 2222.0], [385.0, 2259.0], [384.0, 2268.0], [393.0, 2022.0], [398.0, 1658.5], [396.0, 2070.0], [397.0, 2299.0], [392.0, 2167.0], [394.0, 2083.5], [412.0, 2205.0], [413.0, 2200.0], [403.0, 2167.0], [402.0, 2178.0], [407.0, 2234.0], [408.0, 2186.0], [415.0, 1920.0], [406.0, 2234.0], [405.0, 2144.5], [404.0, 2246.0], [414.0, 2078.0], [401.0, 1126.0], [400.0, 2189.0], [409.0, 2079.0], [411.0, 2093.0], [410.0, 2155.0], [429.0, 2157.0], [418.0, 2175.5], [420.0, 2159.0], [419.0, 2258.0], [421.0, 2263.0], [422.0, 2243.0], [423.0, 2394.0], [417.0, 2253.0], [416.0, 2169.0], [425.0, 2199.0], [426.0, 2242.0], [427.0, 2186.5], [430.0, 2265.0], [431.0, 2311.0], [424.0, 2306.0], [428.0, 2163.0], [444.0, 2159.5], [434.0, 2244.5], [440.0, 2258.0], [439.0, 2265.0], [438.0, 2261.0], [436.0, 2166.0], [437.0, 2158.0], [432.0, 2298.0], [433.0, 2207.5], [441.0, 2120.5], [446.0, 2222.0], [445.0, 2314.0], [447.0, 2323.0], [442.0, 2313.0], [443.0, 2290.0], [435.0, 2250.0], [451.0, 2183.5], [453.0, 2166.0], [458.0, 2075.0], [452.0, 2201.0], [463.0, 2199.0], [448.0, 2204.5], [450.0, 2192.0], [449.0, 2266.0], [454.0, 2282.5], [455.0, 2224.0], [459.0, 2147.0], [460.0, 2155.0], [461.0, 2439.0], [462.0, 2193.0], [457.0, 2206.0], [456.0, 2360.0], [476.0, 265.5], [479.0, 520.0], [472.0, 140.0], [473.0, 1933.0], [474.0, 2181.0], [477.0, 2107.0], [478.0, 2226.0], [469.0, 1821.5], [468.0, 2251.0], [467.0, 2058.0], [470.0, 2176.0], [464.0, 2163.0], [466.0, 2032.0], [493.0, 493.0], [494.0, 156.0], [490.0, 127.0], [491.0, 559.0], [495.0, 454.0], [488.0, 410.5], [480.0, 2162.0], [486.0, 220.5], [487.0, 2305.0], [484.0, 2038.5], [482.0, 285.0], [483.0, 2084.0], [481.0, 436.0], [504.0, 298.0], [497.0, 200.0], [505.0, 396.0], [498.0, 501.5], [506.0, 456.5], [499.0, 527.0], [510.0, 549.0], [502.0, 809.0], [500.0, 2348.0], [517.0, 417.0], [518.0, 178.5], [513.0, 219.0], [528.0, 256.0], [534.0, 271.0], [529.0, 340.0], [520.0, 352.5], [524.0, 574.5], [531.0, 377.0], [541.0, 443.0], [519.0, 592.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[239.0, 3616.0], [248.0, 3650.5], [259.0, 4044.0], [257.0, 4230.0], [263.0, 4320.0], [277.0, 4118.5], [272.0, 3723.0], [284.0, 4546.0], [291.0, 4401.0], [288.0, 4447.0], [302.0, 4164.5], [299.0, 3955.0], [294.0, 4281.0], [289.0, 2393.0], [293.0, 4094.0], [305.0, 3794.0], [311.0, 3788.0], [308.0, 3766.5], [317.0, 3739.5], [307.0, 3659.0], [316.0, 3872.0], [312.0, 3923.0], [313.0, 3887.5], [304.0, 2678.0], [319.0, 3803.0], [332.0, 3794.0], [335.0, 3771.5], [334.0, 3748.0], [330.0, 3741.0], [331.0, 3811.0], [323.0, 3924.0], [333.0, 3762.0], [329.0, 3802.0], [322.0, 3713.5], [321.0, 3743.0], [325.0, 3786.5], [324.0, 3901.0], [327.0, 3812.0], [348.0, 3736.0], [347.0, 3476.0], [340.0, 3740.0], [341.0, 3771.0], [343.0, 3748.0], [342.0, 3701.0], [346.0, 3764.0], [337.0, 3709.0], [336.0, 3806.0], [338.0, 3745.0], [339.0, 3768.0], [349.0, 3531.0], [351.0, 3760.0], [350.0, 3649.0], [345.0, 3718.0], [344.0, 3704.0], [355.0, 3361.0], [358.0, 3640.5], [359.0, 3802.0], [360.0, 3620.5], [365.0, 3697.0], [364.0, 3602.0], [367.0, 3664.0], [356.0, 3634.0], [357.0, 3723.5], [353.0, 3753.0], [354.0, 3675.0], [352.0, 3659.0], [363.0, 3663.0], [362.0, 3399.5], [361.0, 3678.0], [382.0, 3436.0], [368.0, 2026.0], [377.0, 3678.0], [375.0, 3667.5], [372.0, 3706.0], [373.0, 3699.0], [374.0, 3792.0], [381.0, 3585.0], [380.0, 3665.0], [376.0, 3604.0], [378.0, 3674.5], [379.0, 3695.0], [383.0, 3400.0], [370.0, 3729.0], [369.0, 3619.0], [371.0, 3714.5], [399.0, 2624.0], [395.0, 2840.0], [389.0, 3599.0], [390.0, 3640.5], [388.0, 3625.0], [391.0, 3182.0], [386.0, 3370.0], [385.0, 3633.0], [384.0, 3596.0], [393.0, 2963.0], [398.0, 2726.0], [387.0, 3750.0], [396.0, 2793.0], [397.0, 3518.5], [392.0, 2876.0], [394.0, 2902.0], [412.0, 1952.0], [413.0, 2160.0], [403.0, 2262.0], [402.0, 2031.0], [407.0, 3434.0], [408.0, 3474.0], [415.0, 2266.5], [406.0, 2478.0], [405.0, 2388.0], [404.0, 3440.0], [414.0, 2219.0], [401.0, 2448.0], [400.0, 2552.0], [409.0, 2483.0], [411.0, 2252.0], [410.0, 2226.0], [418.0, 2808.0], [429.0, 907.0], [420.0, 1952.0], [430.0, 3577.0], [426.0, 2051.5], [427.0, 3729.0], [425.0, 3627.5], [431.0, 2176.0], [428.0, 3174.0], [421.0, 1663.0], [423.0, 2528.5], [417.0, 3167.0], [416.0, 1992.0], [422.0, 1954.0], [434.0, 2769.0], [442.0, 1931.5], [440.0, 1833.0], [435.0, 1863.0], [436.0, 2750.0], [439.0, 2340.0], [432.0, 2218.0], [433.0, 2055.0], [437.0, 1917.0], [445.0, 1891.5], [446.0, 1792.0], [458.0, 1869.0], [457.0, 1797.0], [450.0, 2000.0], [449.0, 1997.0], [453.0, 1921.0], [460.0, 2167.0], [477.0, 1938.0], [464.0, 1832.0], [470.0, 2932.5], [480.0, 1879.0], [502.0, 524.0], [500.0, 1944.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 541.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 28.0, "minX": 32.0, "maxY": 4542.0, "series": [{"data": [[32.0, 28.5], [239.0, 2473.5], [248.0, 2520.0], [259.0, 2621.5], [257.0, 2504.5], [263.0, 2815.0], [280.0, 28.0], [277.0, 2396.0], [272.0, 2368.0], [285.0, 2332.0], [284.0, 2638.0], [291.0, 2572.0], [288.0, 2742.0], [302.0, 2878.0], [299.0, 2388.0], [294.0, 2811.0], [289.0, 2323.0], [293.0, 2509.0], [317.0, 2251.5], [311.0, 2355.0], [308.0, 2463.0], [307.0, 2416.0], [316.0, 2315.0], [312.0, 2422.0], [319.0, 2306.0], [313.0, 2427.0], [305.0, 2235.5], [304.0, 2460.0], [315.0, 2771.0], [332.0, 2331.0], [335.0, 2249.0], [334.0, 2232.0], [330.0, 2290.0], [331.0, 2447.0], [323.0, 2353.0], [333.0, 2230.0], [329.0, 2316.0], [322.0, 2287.0], [321.0, 2286.5], [325.0, 2331.0], [324.0, 2353.0], [327.0, 2294.0], [348.0, 2311.0], [347.0, 2278.0], [340.0, 2235.0], [341.0, 2236.0], [343.0, 2248.0], [342.0, 2256.0], [346.0, 2300.0], [337.0, 2231.0], [336.0, 2258.0], [338.0, 2286.0], [339.0, 2353.0], [349.0, 2291.0], [351.0, 2263.0], [350.0, 2268.0], [345.0, 2310.0], [344.0, 2273.0], [355.0, 2202.0], [352.0, 2203.0], [358.0, 2223.5], [359.0, 2279.0], [360.0, 2259.0], [365.0, 2290.0], [364.0, 2254.0], [367.0, 2328.0], [361.0, 2286.0], [356.0, 2251.0], [357.0, 2319.0], [353.0, 2254.0], [354.0, 2228.0], [363.0, 2223.0], [362.0, 2274.0], [382.0, 2144.0], [368.0, 749.0], [378.0, 2289.0], [379.0, 2253.0], [370.0, 2281.0], [369.0, 2365.5], [377.0, 2284.0], [375.0, 2261.0], [374.0, 2351.0], [373.0, 2309.0], [372.0, 2298.0], [381.0, 2271.0], [380.0, 2284.0], [371.0, 2308.0], [376.0, 2312.0], [383.0, 2124.0], [399.0, 1868.0], [387.0, 2213.0], [395.0, 2093.0], [389.0, 2219.0], [390.0, 2237.0], [388.0, 2287.0], [391.0, 2105.0], [386.0, 2214.0], [385.0, 2256.0], [384.0, 2262.0], [393.0, 2010.0], [398.0, 1656.0], [396.0, 2066.0], [397.0, 2295.0], [392.0, 2161.0], [394.0, 2078.0], [412.0, 2200.0], [413.0, 2195.0], [403.0, 2159.0], [402.0, 2174.0], [407.0, 2229.0], [408.0, 2179.0], [415.0, 1912.0], [406.0, 2229.0], [405.0, 2141.0], [404.0, 2237.5], [414.0, 2074.0], [401.0, 1126.0], [400.0, 2183.0], [409.0, 2073.0], [411.0, 2087.0], [410.0, 2148.0], [429.0, 2151.0], [418.0, 2166.0], [420.0, 2154.0], [419.0, 2251.0], [421.0, 2257.0], [422.0, 2241.0], [423.0, 2389.0], [417.0, 2248.0], [416.0, 2165.0], [425.0, 2194.0], [426.0, 2236.0], [427.0, 2181.0], [430.0, 2259.0], [431.0, 2304.0], [424.0, 2302.5], [428.0, 2159.0], [444.0, 2151.0], [434.0, 2241.0], [440.0, 2250.0], [439.0, 2259.0], [438.0, 2250.5], [436.0, 2159.0], [437.0, 2150.0], [432.0, 2295.0], [433.0, 2200.0], [441.0, 2116.5], [446.0, 2218.0], [445.0, 2302.0], [447.0, 2316.0], [442.0, 2304.5], [443.0, 2285.0], [435.0, 2244.0], [451.0, 2180.5], [453.0, 2160.0], [458.0, 2069.0], [452.0, 2195.5], [463.0, 2193.0], [448.0, 2199.0], [450.0, 2191.5], [449.0, 2259.0], [454.0, 2277.0], [455.0, 2219.0], [459.0, 2142.0], [460.0, 2151.0], [461.0, 2402.0], [462.0, 2189.5], [457.0, 2199.0], [456.0, 2355.5], [476.0, 263.0], [479.0, 516.0], [472.0, 138.0], [473.0, 1928.0], [474.0, 2178.5], [477.0, 2104.0], [478.0, 2217.0], [469.0, 1813.0], [468.0, 2243.5], [467.0, 2053.0], [470.0, 2169.0], [464.0, 2157.0], [466.0, 2027.5], [493.0, 490.0], [494.0, 154.0], [490.0, 125.0], [491.0, 556.0], [495.0, 451.0], [488.0, 410.0], [480.0, 2152.0], [486.0, 216.0], [487.0, 2299.0], [484.0, 2036.0], [482.0, 281.0], [483.0, 2081.0], [481.0, 433.0], [504.0, 294.0], [497.0, 199.0], [505.0, 393.0], [498.0, 499.5], [506.0, 454.0], [499.0, 523.0], [510.0, 544.0], [502.0, 805.0], [500.0, 2338.0], [517.0, 413.0], [518.0, 176.0], [513.0, 217.0], [528.0, 253.0], [534.0, 271.0], [529.0, 337.0], [520.0, 351.5], [524.0, 569.0], [531.0, 374.0], [541.0, 439.0], [519.0, 589.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[239.0, 3610.0], [248.0, 3647.0], [259.0, 4044.0], [257.0, 4219.0], [263.0, 4312.0], [277.0, 4109.0], [272.0, 3721.0], [284.0, 4542.0], [291.0, 4393.0], [288.0, 4444.0], [302.0, 4154.0], [299.0, 3949.0], [294.0, 4273.0], [289.0, 2380.0], [293.0, 4087.0], [305.0, 3786.0], [311.0, 3783.0], [308.0, 3757.0], [317.0, 3732.0], [307.0, 3659.0], [316.0, 3863.0], [312.0, 3917.0], [313.0, 3879.0], [304.0, 2673.0], [319.0, 3795.0], [332.0, 3789.0], [335.0, 3764.0], [334.0, 3741.0], [330.0, 3735.0], [331.0, 3802.0], [323.0, 3921.0], [333.0, 3753.0], [329.0, 3792.0], [322.0, 3707.5], [321.0, 3734.0], [325.0, 3780.0], [324.0, 3898.0], [327.0, 3806.0], [348.0, 3724.0], [347.0, 3471.0], [340.0, 3733.0], [341.0, 3764.0], [343.0, 3742.0], [342.0, 3694.0], [346.0, 3763.0], [337.0, 3702.0], [336.0, 3798.0], [338.0, 3737.0], [339.0, 3758.0], [349.0, 3524.0], [351.0, 3752.0], [350.0, 3642.0], [345.0, 3709.0], [344.0, 3698.0], [355.0, 3355.0], [358.0, 3634.5], [359.0, 3796.0], [360.0, 3613.0], [365.0, 3687.5], [364.0, 3598.0], [367.0, 3657.0], [356.0, 3626.5], [357.0, 3715.5], [353.0, 3745.0], [354.0, 3669.5], [352.0, 3655.0], [363.0, 3654.0], [362.0, 3393.0], [361.0, 3672.0], [382.0, 3430.0], [368.0, 2020.0], [377.0, 3671.0], [375.0, 3661.0], [372.0, 3701.0], [373.0, 3689.0], [374.0, 3785.0], [381.0, 3576.0], [380.0, 3660.5], [376.0, 3595.0], [378.0, 3669.5], [379.0, 3688.0], [383.0, 3392.0], [370.0, 3721.5], [369.0, 3613.0], [371.0, 3707.5], [399.0, 2616.0], [395.0, 2833.0], [389.0, 3590.5], [390.0, 3633.0], [388.0, 3619.0], [391.0, 3180.0], [386.0, 3366.0], [385.0, 3629.0], [384.0, 3590.5], [393.0, 2957.0], [398.0, 2721.0], [387.0, 3742.0], [396.0, 2787.0], [397.0, 3507.5], [392.0, 2872.0], [394.0, 2897.5], [412.0, 1949.0], [413.0, 2155.0], [403.0, 2256.0], [402.0, 2026.0], [407.0, 3425.0], [408.0, 3469.0], [415.0, 2262.5], [406.0, 2470.0], [405.0, 2385.0], [404.0, 3432.0], [414.0, 2215.5], [401.0, 2442.0], [400.0, 2549.5], [409.0, 2477.5], [411.0, 2248.0], [410.0, 2223.0], [418.0, 2798.0], [429.0, 901.0], [420.0, 1946.0], [430.0, 3570.0], [426.0, 2039.5], [427.0, 3721.5], [425.0, 3624.0], [431.0, 2167.0], [428.0, 3167.0], [421.0, 1660.0], [423.0, 2525.0], [417.0, 3165.0], [416.0, 1981.0], [422.0, 1948.0], [434.0, 2766.0], [442.0, 1924.0], [440.0, 1803.0], [435.0, 1859.0], [436.0, 2744.0], [439.0, 2340.0], [432.0, 2217.0], [433.0, 2043.0], [437.0, 1908.0], [445.0, 1885.5], [446.0, 1785.0], [458.0, 1862.0], [457.0, 1793.0], [450.0, 1996.0], [449.0, 1971.0], [453.0, 1903.0], [460.0, 2162.0], [477.0, 1931.0], [464.0, 1827.0], [470.0, 2922.0], [480.0, 1871.0], [502.0, 523.0], [500.0, 1931.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 541.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 185.55, "minX": 1.62749718E12, "maxY": 449.65, "series": [{"data": [[1.62749808E12, 251.03333333333333], [1.62749778E12, 353.3], [1.62749748E12, 404.4], [1.62749718E12, 185.55], [1.62749784E12, 388.3], [1.62749754E12, 380.1166666666667], [1.62749724E12, 449.65], [1.6274979E12, 360.03333333333336], [1.6274976E12, 403.53333333333336], [1.6274973E12, 404.23333333333335], [1.62749796E12, 395.3], [1.62749766E12, 374.93333333333334], [1.62749736E12, 405.8833333333333], [1.62749802E12, 364.21666666666664], [1.62749772E12, 406.98333333333335], [1.62749742E12, 388.35]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.62749808E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 18.75, "minX": 1.62749718E12, "maxY": 360.76666666666665, "series": [{"data": [[1.62749808E12, 248.9], [1.62749778E12, 244.83333333333334], [1.62749748E12, 346.45], [1.62749718E12, 182.25], [1.62749784E12, 360.76666666666665], [1.62749754E12, 272.25], [1.62749724E12, 350.1], [1.6274979E12, 244.36666666666667], [1.6274976E12, 346.8333333333333], [1.6274973E12, 297.76666666666665], [1.62749796E12, 350.18333333333334], [1.62749766E12, 267.75], [1.62749736E12, 349.56666666666666], [1.62749802E12, 212.83333333333334], [1.62749772E12, 359.81666666666666], [1.62749742E12, 280.43333333333334]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.62749808E12, 18.75], [1.62749778E12, 108.46666666666667], [1.62749748E12, 57.95], [1.62749784E12, 27.533333333333335], [1.62749754E12, 107.86666666666666], [1.62749724E12, 91.21666666666667], [1.6274979E12, 115.66666666666667], [1.6274976E12, 56.7], [1.6274973E12, 101.43333333333334], [1.62749796E12, 45.11666666666667], [1.62749766E12, 107.18333333333334], [1.62749736E12, 56.31666666666667], [1.62749802E12, 151.43333333333334], [1.62749772E12, 47.166666666666664], [1.62749742E12, 107.91666666666667]], "isOverall": false, "label": "500", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.62749808E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 18.75, "minX": 1.62749718E12, "maxY": 360.76666666666665, "series": [{"data": [[1.62749808E12, 248.9], [1.62749778E12, 244.83333333333334], [1.62749748E12, 346.45], [1.62749718E12, 182.25], [1.62749784E12, 360.76666666666665], [1.62749754E12, 272.25], [1.62749724E12, 350.1], [1.6274979E12, 244.36666666666667], [1.6274976E12, 346.8333333333333], [1.6274973E12, 297.76666666666665], [1.62749796E12, 350.18333333333334], [1.62749766E12, 267.75], [1.62749736E12, 349.56666666666666], [1.62749802E12, 212.83333333333334], [1.62749772E12, 359.81666666666666], [1.62749742E12, 280.43333333333334]], "isOverall": false, "label": "HTTP Request-success", "isController": false}, {"data": [[1.62749808E12, 18.75], [1.62749778E12, 108.46666666666667], [1.62749748E12, 57.95], [1.62749784E12, 27.533333333333335], [1.62749754E12, 107.86666666666666], [1.62749724E12, 91.21666666666667], [1.6274979E12, 115.66666666666667], [1.6274976E12, 56.7], [1.6274973E12, 101.43333333333334], [1.62749796E12, 45.11666666666667], [1.62749766E12, 107.18333333333334], [1.62749736E12, 56.31666666666667], [1.62749802E12, 151.43333333333334], [1.62749772E12, 47.166666666666664], [1.62749742E12, 107.91666666666667]], "isOverall": false, "label": "HTTP Request-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.62749808E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 18.75, "minX": 1.62749718E12, "maxY": 360.76666666666665, "series": [{"data": [[1.62749808E12, 248.9], [1.62749778E12, 244.83333333333334], [1.62749748E12, 346.45], [1.62749718E12, 182.25], [1.62749784E12, 360.76666666666665], [1.62749754E12, 272.25], [1.62749724E12, 350.1], [1.6274979E12, 244.36666666666667], [1.6274976E12, 346.8333333333333], [1.6274973E12, 297.76666666666665], [1.62749796E12, 350.18333333333334], [1.62749766E12, 267.75], [1.62749736E12, 349.56666666666666], [1.62749802E12, 212.83333333333334], [1.62749772E12, 359.81666666666666], [1.62749742E12, 280.43333333333334]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.62749808E12, 18.75], [1.62749778E12, 108.46666666666667], [1.62749748E12, 57.95], [1.62749784E12, 27.533333333333335], [1.62749754E12, 107.86666666666666], [1.62749724E12, 91.21666666666667], [1.6274979E12, 115.66666666666667], [1.6274976E12, 56.7], [1.6274973E12, 101.43333333333334], [1.62749796E12, 45.11666666666667], [1.62749766E12, 107.18333333333334], [1.62749736E12, 56.31666666666667], [1.62749802E12, 151.43333333333334], [1.62749772E12, 47.166666666666664], [1.62749742E12, 107.91666666666667]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.62749808E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

