/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 3.0, "minX": 0.0, "maxY": 10502.0, "series": [{"data": [[0.0, 3.0], [0.1, 8.0], [0.2, 9.0], [0.3, 10.0], [0.4, 12.0], [0.5, 12.0], [0.6, 13.0], [0.7, 14.0], [0.8, 15.0], [0.9, 15.0], [1.0, 16.0], [1.1, 16.0], [1.2, 17.0], [1.3, 17.0], [1.4, 18.0], [1.5, 19.0], [1.6, 19.0], [1.7, 20.0], [1.8, 20.0], [1.9, 21.0], [2.0, 22.0], [2.1, 23.0], [2.2, 24.0], [2.3, 25.0], [2.4, 26.0], [2.5, 27.0], [2.6, 28.0], [2.7, 29.0], [2.8, 30.0], [2.9, 31.0], [3.0, 32.0], [3.1, 34.0], [3.2, 35.0], [3.3, 37.0], [3.4, 39.0], [3.5, 40.0], [3.6, 42.0], [3.7, 44.0], [3.8, 45.0], [3.9, 47.0], [4.0, 49.0], [4.1, 51.0], [4.2, 53.0], [4.3, 54.0], [4.4, 56.0], [4.5, 58.0], [4.6, 60.0], [4.7, 62.0], [4.8, 64.0], [4.9, 66.0], [5.0, 68.0], [5.1, 71.0], [5.2, 73.0], [5.3, 76.0], [5.4, 78.0], [5.5, 80.0], [5.6, 83.0], [5.7, 85.0], [5.8, 88.0], [5.9, 90.0], [6.0, 93.0], [6.1, 95.0], [6.2, 97.0], [6.3, 99.0], [6.4, 101.0], [6.5, 102.0], [6.6, 104.0], [6.7, 106.0], [6.8, 108.0], [6.9, 111.0], [7.0, 114.0], [7.1, 117.0], [7.2, 120.0], [7.3, 122.0], [7.4, 125.0], [7.5, 127.0], [7.6, 129.0], [7.7, 132.0], [7.8, 135.0], [7.9, 137.0], [8.0, 141.0], [8.1, 144.0], [8.2, 147.0], [8.3, 149.0], [8.4, 151.0], [8.5, 153.0], [8.6, 155.0], [8.7, 157.0], [8.8, 159.0], [8.9, 161.0], [9.0, 163.0], [9.1, 165.0], [9.2, 167.0], [9.3, 169.0], [9.4, 171.0], [9.5, 173.0], [9.6, 175.0], [9.7, 177.0], [9.8, 179.0], [9.9, 182.0], [10.0, 184.0], [10.1, 186.0], [10.2, 189.0], [10.3, 191.0], [10.4, 194.0], [10.5, 198.0], [10.6, 201.0], [10.7, 203.0], [10.8, 206.0], [10.9, 209.0], [11.0, 211.0], [11.1, 214.0], [11.2, 217.0], [11.3, 219.0], [11.4, 222.0], [11.5, 224.0], [11.6, 226.0], [11.7, 229.0], [11.8, 231.0], [11.9, 234.0], [12.0, 236.0], [12.1, 238.0], [12.2, 240.0], [12.3, 242.0], [12.4, 245.0], [12.5, 248.0], [12.6, 251.0], [12.7, 253.0], [12.8, 255.0], [12.9, 257.0], [13.0, 259.0], [13.1, 261.0], [13.2, 263.0], [13.3, 265.0], [13.4, 267.0], [13.5, 269.0], [13.6, 271.0], [13.7, 273.0], [13.8, 275.0], [13.9, 276.0], [14.0, 278.0], [14.1, 279.0], [14.2, 280.0], [14.3, 281.0], [14.4, 282.0], [14.5, 282.0], [14.6, 283.0], [14.7, 283.0], [14.8, 284.0], [14.9, 284.0], [15.0, 285.0], [15.1, 285.0], [15.2, 285.0], [15.3, 286.0], [15.4, 286.0], [15.5, 286.0], [15.6, 287.0], [15.7, 287.0], [15.8, 287.0], [15.9, 287.0], [16.0, 288.0], [16.1, 288.0], [16.2, 288.0], [16.3, 288.0], [16.4, 288.0], [16.5, 289.0], [16.6, 289.0], [16.7, 289.0], [16.8, 289.0], [16.9, 289.0], [17.0, 289.0], [17.1, 290.0], [17.2, 290.0], [17.3, 290.0], [17.4, 290.0], [17.5, 290.0], [17.6, 290.0], [17.7, 290.0], [17.8, 290.0], [17.9, 291.0], [18.0, 291.0], [18.1, 291.0], [18.2, 291.0], [18.3, 291.0], [18.4, 291.0], [18.5, 291.0], [18.6, 291.0], [18.7, 291.0], [18.8, 292.0], [18.9, 292.0], [19.0, 292.0], [19.1, 292.0], [19.2, 292.0], [19.3, 292.0], [19.4, 292.0], [19.5, 292.0], [19.6, 292.0], [19.7, 292.0], [19.8, 293.0], [19.9, 293.0], [20.0, 293.0], [20.1, 293.0], [20.2, 293.0], [20.3, 293.0], [20.4, 293.0], [20.5, 293.0], [20.6, 293.0], [20.7, 293.0], [20.8, 293.0], [20.9, 293.0], [21.0, 294.0], [21.1, 294.0], [21.2, 294.0], [21.3, 294.0], [21.4, 294.0], [21.5, 294.0], [21.6, 294.0], [21.7, 294.0], [21.8, 294.0], [21.9, 294.0], [22.0, 294.0], [22.1, 295.0], [22.2, 295.0], [22.3, 295.0], [22.4, 295.0], [22.5, 295.0], [22.6, 295.0], [22.7, 295.0], [22.8, 295.0], [22.9, 295.0], [23.0, 295.0], [23.1, 295.0], [23.2, 295.0], [23.3, 295.0], [23.4, 296.0], [23.5, 296.0], [23.6, 296.0], [23.7, 296.0], [23.8, 296.0], [23.9, 296.0], [24.0, 296.0], [24.1, 296.0], [24.2, 296.0], [24.3, 296.0], [24.4, 296.0], [24.5, 296.0], [24.6, 297.0], [24.7, 297.0], [24.8, 297.0], [24.9, 297.0], [25.0, 297.0], [25.1, 297.0], [25.2, 297.0], [25.3, 297.0], [25.4, 297.0], [25.5, 297.0], [25.6, 297.0], [25.7, 297.0], [25.8, 297.0], [25.9, 298.0], [26.0, 298.0], [26.1, 298.0], [26.2, 298.0], [26.3, 298.0], [26.4, 298.0], [26.5, 298.0], [26.6, 298.0], [26.7, 298.0], [26.8, 298.0], [26.9, 298.0], [27.0, 298.0], [27.1, 298.0], [27.2, 299.0], [27.3, 299.0], [27.4, 299.0], [27.5, 299.0], [27.6, 299.0], [27.7, 299.0], [27.8, 299.0], [27.9, 299.0], [28.0, 299.0], [28.1, 299.0], [28.2, 299.0], [28.3, 299.0], [28.4, 299.0], [28.5, 300.0], [28.6, 300.0], [28.7, 300.0], [28.8, 300.0], [28.9, 300.0], [29.0, 300.0], [29.1, 300.0], [29.2, 300.0], [29.3, 300.0], [29.4, 300.0], [29.5, 300.0], [29.6, 300.0], [29.7, 301.0], [29.8, 301.0], [29.9, 301.0], [30.0, 301.0], [30.1, 301.0], [30.2, 301.0], [30.3, 301.0], [30.4, 301.0], [30.5, 301.0], [30.6, 301.0], [30.7, 302.0], [30.8, 302.0], [30.9, 302.0], [31.0, 302.0], [31.1, 302.0], [31.2, 302.0], [31.3, 302.0], [31.4, 302.0], [31.5, 302.0], [31.6, 303.0], [31.7, 303.0], [31.8, 303.0], [31.9, 303.0], [32.0, 303.0], [32.1, 303.0], [32.2, 303.0], [32.3, 303.0], [32.4, 304.0], [32.5, 304.0], [32.6, 304.0], [32.7, 304.0], [32.8, 304.0], [32.9, 304.0], [33.0, 305.0], [33.1, 305.0], [33.2, 305.0], [33.3, 305.0], [33.4, 305.0], [33.5, 305.0], [33.6, 306.0], [33.7, 306.0], [33.8, 306.0], [33.9, 306.0], [34.0, 306.0], [34.1, 306.0], [34.2, 307.0], [34.3, 307.0], [34.4, 307.0], [34.5, 307.0], [34.6, 307.0], [34.7, 308.0], [34.8, 308.0], [34.9, 308.0], [35.0, 308.0], [35.1, 309.0], [35.2, 309.0], [35.3, 309.0], [35.4, 310.0], [35.5, 310.0], [35.6, 310.0], [35.7, 311.0], [35.8, 311.0], [35.9, 311.0], [36.0, 312.0], [36.1, 312.0], [36.2, 312.0], [36.3, 313.0], [36.4, 313.0], [36.5, 313.0], [36.6, 314.0], [36.7, 314.0], [36.8, 315.0], [36.9, 315.0], [37.0, 315.0], [37.1, 316.0], [37.2, 316.0], [37.3, 316.0], [37.4, 317.0], [37.5, 317.0], [37.6, 317.0], [37.7, 318.0], [37.8, 318.0], [37.9, 319.0], [38.0, 319.0], [38.1, 319.0], [38.2, 320.0], [38.3, 320.0], [38.4, 321.0], [38.5, 321.0], [38.6, 321.0], [38.7, 322.0], [38.8, 322.0], [38.9, 323.0], [39.0, 323.0], [39.1, 323.0], [39.2, 324.0], [39.3, 324.0], [39.4, 324.0], [39.5, 325.0], [39.6, 325.0], [39.7, 325.0], [39.8, 325.0], [39.9, 326.0], [40.0, 326.0], [40.1, 326.0], [40.2, 326.0], [40.3, 327.0], [40.4, 327.0], [40.5, 327.0], [40.6, 327.0], [40.7, 328.0], [40.8, 328.0], [40.9, 328.0], [41.0, 328.0], [41.1, 328.0], [41.2, 328.0], [41.3, 329.0], [41.4, 329.0], [41.5, 329.0], [41.6, 329.0], [41.7, 329.0], [41.8, 329.0], [41.9, 330.0], [42.0, 330.0], [42.1, 330.0], [42.2, 330.0], [42.3, 330.0], [42.4, 330.0], [42.5, 330.0], [42.6, 331.0], [42.7, 331.0], [42.8, 331.0], [42.9, 331.0], [43.0, 331.0], [43.1, 331.0], [43.2, 331.0], [43.3, 331.0], [43.4, 332.0], [43.5, 332.0], [43.6, 332.0], [43.7, 332.0], [43.8, 332.0], [43.9, 332.0], [44.0, 332.0], [44.1, 332.0], [44.2, 332.0], [44.3, 333.0], [44.4, 333.0], [44.5, 333.0], [44.6, 333.0], [44.7, 333.0], [44.8, 333.0], [44.9, 333.0], [45.0, 333.0], [45.1, 333.0], [45.2, 334.0], [45.3, 334.0], [45.4, 334.0], [45.5, 334.0], [45.6, 334.0], [45.7, 334.0], [45.8, 334.0], [45.9, 334.0], [46.0, 334.0], [46.1, 334.0], [46.2, 334.0], [46.3, 335.0], [46.4, 335.0], [46.5, 335.0], [46.6, 335.0], [46.7, 335.0], [46.8, 335.0], [46.9, 335.0], [47.0, 335.0], [47.1, 335.0], [47.2, 335.0], [47.3, 336.0], [47.4, 336.0], [47.5, 336.0], [47.6, 336.0], [47.7, 336.0], [47.8, 336.0], [47.9, 336.0], [48.0, 336.0], [48.1, 336.0], [48.2, 336.0], [48.3, 336.0], [48.4, 337.0], [48.5, 337.0], [48.6, 337.0], [48.7, 337.0], [48.8, 337.0], [48.9, 337.0], [49.0, 337.0], [49.1, 337.0], [49.2, 337.0], [49.3, 337.0], [49.4, 337.0], [49.5, 338.0], [49.6, 338.0], [49.7, 338.0], [49.8, 338.0], [49.9, 338.0], [50.0, 338.0], [50.1, 338.0], [50.2, 338.0], [50.3, 338.0], [50.4, 338.0], [50.5, 338.0], [50.6, 339.0], [50.7, 339.0], [50.8, 339.0], [50.9, 339.0], [51.0, 339.0], [51.1, 339.0], [51.2, 339.0], [51.3, 339.0], [51.4, 339.0], [51.5, 339.0], [51.6, 340.0], [51.7, 340.0], [51.8, 340.0], [51.9, 340.0], [52.0, 340.0], [52.1, 340.0], [52.2, 340.0], [52.3, 340.0], [52.4, 340.0], [52.5, 341.0], [52.6, 341.0], [52.7, 341.0], [52.8, 341.0], [52.9, 341.0], [53.0, 341.0], [53.1, 341.0], [53.2, 341.0], [53.3, 342.0], [53.4, 342.0], [53.5, 342.0], [53.6, 342.0], [53.7, 342.0], [53.8, 342.0], [53.9, 342.0], [54.0, 343.0], [54.1, 343.0], [54.2, 343.0], [54.3, 343.0], [54.4, 343.0], [54.5, 343.0], [54.6, 344.0], [54.7, 344.0], [54.8, 344.0], [54.9, 344.0], [55.0, 344.0], [55.1, 345.0], [55.2, 345.0], [55.3, 345.0], [55.4, 345.0], [55.5, 346.0], [55.6, 346.0], [55.7, 346.0], [55.8, 346.0], [55.9, 347.0], [56.0, 347.0], [56.1, 347.0], [56.2, 348.0], [56.3, 348.0], [56.4, 349.0], [56.5, 349.0], [56.6, 350.0], [56.7, 350.0], [56.8, 351.0], [56.9, 351.0], [57.0, 352.0], [57.1, 352.0], [57.2, 353.0], [57.3, 353.0], [57.4, 354.0], [57.5, 354.0], [57.6, 354.0], [57.7, 355.0], [57.8, 355.0], [57.9, 355.0], [58.0, 356.0], [58.1, 356.0], [58.2, 356.0], [58.3, 356.0], [58.4, 357.0], [58.5, 357.0], [58.6, 357.0], [58.7, 358.0], [58.8, 358.0], [58.9, 358.0], [59.0, 358.0], [59.1, 359.0], [59.2, 359.0], [59.3, 359.0], [59.4, 359.0], [59.5, 359.0], [59.6, 360.0], [59.7, 360.0], [59.8, 360.0], [59.9, 360.0], [60.0, 360.0], [60.1, 361.0], [60.2, 361.0], [60.3, 361.0], [60.4, 361.0], [60.5, 361.0], [60.6, 362.0], [60.7, 362.0], [60.8, 362.0], [60.9, 362.0], [61.0, 362.0], [61.1, 362.0], [61.2, 362.0], [61.3, 363.0], [61.4, 363.0], [61.5, 363.0], [61.6, 363.0], [61.7, 363.0], [61.8, 363.0], [61.9, 364.0], [62.0, 364.0], [62.1, 364.0], [62.2, 364.0], [62.3, 364.0], [62.4, 364.0], [62.5, 365.0], [62.6, 365.0], [62.7, 365.0], [62.8, 365.0], [62.9, 365.0], [63.0, 365.0], [63.1, 366.0], [63.2, 366.0], [63.3, 366.0], [63.4, 366.0], [63.5, 366.0], [63.6, 366.0], [63.7, 367.0], [63.8, 367.0], [63.9, 367.0], [64.0, 367.0], [64.1, 367.0], [64.2, 368.0], [64.3, 368.0], [64.4, 368.0], [64.5, 368.0], [64.6, 368.0], [64.7, 368.0], [64.8, 369.0], [64.9, 369.0], [65.0, 369.0], [65.1, 369.0], [65.2, 370.0], [65.3, 370.0], [65.4, 370.0], [65.5, 370.0], [65.6, 371.0], [65.7, 371.0], [65.8, 371.0], [65.9, 371.0], [66.0, 372.0], [66.1, 372.0], [66.2, 372.0], [66.3, 373.0], [66.4, 373.0], [66.5, 373.0], [66.6, 374.0], [66.7, 374.0], [66.8, 375.0], [66.9, 375.0], [67.0, 376.0], [67.1, 377.0], [67.2, 377.0], [67.3, 378.0], [67.4, 378.0], [67.5, 379.0], [67.6, 380.0], [67.7, 380.0], [67.8, 381.0], [67.9, 382.0], [68.0, 383.0], [68.1, 383.0], [68.2, 384.0], [68.3, 385.0], [68.4, 386.0], [68.5, 386.0], [68.6, 387.0], [68.7, 388.0], [68.8, 389.0], [68.9, 390.0], [69.0, 391.0], [69.1, 391.0], [69.2, 392.0], [69.3, 393.0], [69.4, 394.0], [69.5, 395.0], [69.6, 396.0], [69.7, 397.0], [69.8, 397.0], [69.9, 398.0], [70.0, 399.0], [70.1, 400.0], [70.2, 401.0], [70.3, 401.0], [70.4, 402.0], [70.5, 402.0], [70.6, 403.0], [70.7, 404.0], [70.8, 404.0], [70.9, 405.0], [71.0, 405.0], [71.1, 405.0], [71.2, 406.0], [71.3, 406.0], [71.4, 407.0], [71.5, 407.0], [71.6, 408.0], [71.7, 408.0], [71.8, 408.0], [71.9, 408.0], [72.0, 409.0], [72.1, 409.0], [72.2, 409.0], [72.3, 409.0], [72.4, 410.0], [72.5, 410.0], [72.6, 410.0], [72.7, 410.0], [72.8, 410.0], [72.9, 411.0], [73.0, 411.0], [73.1, 411.0], [73.2, 411.0], [73.3, 412.0], [73.4, 412.0], [73.5, 412.0], [73.6, 412.0], [73.7, 412.0], [73.8, 413.0], [73.9, 413.0], [74.0, 413.0], [74.1, 413.0], [74.2, 414.0], [74.3, 414.0], [74.4, 414.0], [74.5, 414.0], [74.6, 415.0], [74.7, 415.0], [74.8, 415.0], [74.9, 415.0], [75.0, 416.0], [75.1, 416.0], [75.2, 416.0], [75.3, 416.0], [75.4, 417.0], [75.5, 417.0], [75.6, 417.0], [75.7, 417.0], [75.8, 418.0], [75.9, 418.0], [76.0, 418.0], [76.1, 418.0], [76.2, 419.0], [76.3, 419.0], [76.4, 419.0], [76.5, 420.0], [76.6, 420.0], [76.7, 420.0], [76.8, 421.0], [76.9, 421.0], [77.0, 422.0], [77.1, 422.0], [77.2, 422.0], [77.3, 423.0], [77.4, 423.0], [77.5, 424.0], [77.6, 424.0], [77.7, 425.0], [77.8, 425.0], [77.9, 426.0], [78.0, 426.0], [78.1, 427.0], [78.2, 427.0], [78.3, 427.0], [78.4, 428.0], [78.5, 428.0], [78.6, 429.0], [78.7, 429.0], [78.8, 429.0], [78.9, 430.0], [79.0, 430.0], [79.1, 430.0], [79.2, 431.0], [79.3, 431.0], [79.4, 431.0], [79.5, 432.0], [79.6, 432.0], [79.7, 432.0], [79.8, 433.0], [79.9, 433.0], [80.0, 433.0], [80.1, 434.0], [80.2, 434.0], [80.3, 434.0], [80.4, 435.0], [80.5, 435.0], [80.6, 435.0], [80.7, 436.0], [80.8, 436.0], [80.9, 437.0], [81.0, 437.0], [81.1, 438.0], [81.2, 438.0], [81.3, 439.0], [81.4, 439.0], [81.5, 440.0], [81.6, 440.0], [81.7, 441.0], [81.8, 442.0], [81.9, 442.0], [82.0, 443.0], [82.1, 444.0], [82.2, 445.0], [82.3, 446.0], [82.4, 447.0], [82.5, 449.0], [82.6, 450.0], [82.7, 451.0], [82.8, 453.0], [82.9, 454.0], [83.0, 456.0], [83.1, 457.0], [83.2, 458.0], [83.3, 460.0], [83.4, 462.0], [83.5, 463.0], [83.6, 465.0], [83.7, 466.0], [83.8, 468.0], [83.9, 470.0], [84.0, 471.0], [84.1, 473.0], [84.2, 475.0], [84.3, 476.0], [84.4, 478.0], [84.5, 479.0], [84.6, 480.0], [84.7, 481.0], [84.8, 482.0], [84.9, 483.0], [85.0, 483.0], [85.1, 484.0], [85.2, 485.0], [85.3, 485.0], [85.4, 486.0], [85.5, 486.0], [85.6, 487.0], [85.7, 487.0], [85.8, 488.0], [85.9, 488.0], [86.0, 489.0], [86.1, 489.0], [86.2, 489.0], [86.3, 490.0], [86.4, 490.0], [86.5, 491.0], [86.6, 491.0], [86.7, 491.0], [86.8, 492.0], [86.9, 492.0], [87.0, 493.0], [87.1, 493.0], [87.2, 493.0], [87.3, 494.0], [87.4, 494.0], [87.5, 495.0], [87.6, 495.0], [87.7, 495.0], [87.8, 496.0], [87.9, 496.0], [88.0, 497.0], [88.1, 497.0], [88.2, 498.0], [88.3, 498.0], [88.4, 498.0], [88.5, 499.0], [88.6, 499.0], [88.7, 500.0], [88.8, 501.0], [88.9, 501.0], [89.0, 502.0], [89.1, 502.0], [89.2, 503.0], [89.3, 504.0], [89.4, 504.0], [89.5, 505.0], [89.6, 506.0], [89.7, 507.0], [89.8, 508.0], [89.9, 510.0], [90.0, 511.0], [90.1, 512.0], [90.2, 514.0], [90.3, 516.0], [90.4, 518.0], [90.5, 520.0], [90.6, 522.0], [90.7, 525.0], [90.8, 528.0], [90.9, 530.0], [91.0, 533.0], [91.1, 536.0], [91.2, 539.0], [91.3, 542.0], [91.4, 545.0], [91.5, 548.0], [91.6, 551.0], [91.7, 553.0], [91.8, 555.0], [91.9, 557.0], [92.0, 558.0], [92.1, 560.0], [92.2, 561.0], [92.3, 562.0], [92.4, 563.0], [92.5, 563.0], [92.6, 564.0], [92.7, 565.0], [92.8, 566.0], [92.9, 566.0], [93.0, 567.0], [93.1, 567.0], [93.2, 568.0], [93.3, 569.0], [93.4, 569.0], [93.5, 570.0], [93.6, 571.0], [93.7, 571.0], [93.8, 572.0], [93.9, 573.0], [94.0, 574.0], [94.1, 575.0], [94.2, 576.0], [94.3, 578.0], [94.4, 580.0], [94.5, 583.0], [94.6, 587.0], [94.7, 590.0], [94.8, 594.0], [94.9, 598.0], [95.0, 602.0], [95.1, 606.0], [95.2, 611.0], [95.3, 615.0], [95.4, 620.0], [95.5, 624.0], [95.6, 628.0], [95.7, 631.0], [95.8, 633.0], [95.9, 635.0], [96.0, 637.0], [96.1, 638.0], [96.2, 640.0], [96.3, 641.0], [96.4, 643.0], [96.5, 645.0], [96.6, 646.0], [96.7, 648.0], [96.8, 650.0], [96.9, 653.0], [97.0, 657.0], [97.1, 663.0], [97.2, 671.0], [97.3, 678.0], [97.4, 687.0], [97.5, 694.0], [97.6, 699.0], [97.7, 704.0], [97.8, 709.0], [97.9, 713.0], [98.0, 717.0], [98.1, 721.0], [98.2, 724.0], [98.3, 729.0], [98.4, 738.0], [98.5, 751.0], [98.6, 764.0], [98.7, 774.0], [98.8, 784.0], [98.9, 794.0], [99.0, 802.0], [99.1, 815.0], [99.2, 837.0], [99.3, 859.0], [99.4, 878.0], [99.5, 907.0], [99.6, 951.0], [99.7, 1010.0], [99.8, 1128.0], [99.9, 1366.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 984019.0, "series": [{"data": [[0.0, 149806.0], [600.0, 62873.0], [700.0, 32260.0], [800.0, 11970.0], [900.0, 5028.0], [1000.0, 2218.0], [1100.0, 1291.0], [1200.0, 919.0], [1300.0, 912.0], [1400.0, 505.0], [1500.0, 229.0], [1600.0, 111.0], [1700.0, 37.0], [1800.0, 32.0], [1900.0, 7.0], [2000.0, 3.0], [2100.0, 3.0], [2200.0, 12.0], [2300.0, 184.0], [2400.0, 198.0], [2500.0, 189.0], [2600.0, 174.0], [2700.0, 83.0], [2800.0, 46.0], [2900.0, 16.0], [3000.0, 6.0], [3100.0, 6.0], [3500.0, 1.0], [4600.0, 2.0], [4800.0, 47.0], [4700.0, 9.0], [5000.0, 33.0], [5100.0, 20.0], [4900.0, 26.0], [5200.0, 16.0], [5300.0, 12.0], [5400.0, 4.0], [5500.0, 1.0], [5600.0, 1.0], [5700.0, 2.0], [6100.0, 1.0], [9700.0, 7.0], [10200.0, 7.0], [9900.0, 2.0], [9800.0, 2.0], [10300.0, 3.0], [10500.0, 1.0], [10400.0, 1.0], [100.0, 99927.0], [200.0, 422636.0], [300.0, 984019.0], [400.0, 438523.0], [500.0, 149829.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 10500.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 1531.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1.500ms"], [2, "Requests having \nresponse time > 1.500ms"], [3, "Requests in error"]], "maxY": 2099365.0, "series": [{"data": [[0.0, 2099365.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 263354.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1.500ms", "isController": false}, {"data": [[2.0, 1531.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1.500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 120.75707948590855, "minX": 1.6274958E12, "maxY": 1000.0, "series": [{"data": [[1.62749586E12, 463.5668422547504], [1.62749616E12, 1000.0], [1.62749622E12, 1000.0], [1.62749652E12, 1000.0], [1.62749658E12, 1000.0], [1.62749592E12, 917.5935281633431], [1.62749598E12, 1000.0], [1.62749628E12, 1000.0], [1.62749634E12, 1000.0], [1.62749664E12, 1000.0], [1.6274967E12, 994.2478794339116], [1.62749604E12, 1000.0], [1.6274961E12, 1000.0], [1.6274964E12, 1000.0], [1.62749646E12, 1000.0], [1.6274958E12, 120.75707948590855]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6274967E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 7.685714285714286, "minX": 5.0, "maxY": 408.78859060402675, "series": [{"data": [[5.0, 325.4], [6.0, 12.314814814814815], [7.0, 10.58904109589041], [8.0, 9.96739130434783], [9.0, 9.694444444444448], [10.0, 8.07299270072993], [11.0, 10.0], [12.0, 8.795081967213113], [13.0, 7.685714285714286], [14.0, 12.733333333333333], [15.0, 10.858536585365853], [16.0, 8.66393442622951], [17.0, 7.8080000000000025], [18.0, 7.739130434782611], [19.0, 10.212962962962964], [20.0, 11.936507936507928], [21.0, 14.138888888888888], [22.0, 14.05238095238095], [23.0, 13.274611398963728], [24.0, 14.090361445783138], [25.0, 31.136363636363633], [26.0, 20.0], [27.0, 8.915492957746478], [28.0, 30.81818181818182], [29.0, 13.519572953736658], [30.0, 16.964102564102564], [31.0, 19.839215686274503], [32.0, 26.833333333333332], [33.0, 12.446540880503148], [34.0, 13.574850299401191], [35.0, 16.02734375], [36.0, 17.93856655290102], [37.0, 15.065015479876163], [38.0, 27.999999999999996], [39.0, 20.47317073170732], [40.0, 17.307443365695804], [41.0, 15.008849557522117], [42.0, 15.879310344827596], [43.0, 17.424812030075184], [44.0, 18.578358208955233], [45.0, 20.077738515901057], [46.0, 16.731778425655975], [47.0, 19.49337748344372], [48.0, 24.992565055762082], [49.0, 16.513432835820897], [50.0, 17.794285714285714], [51.0, 17.560471976401182], [52.0, 17.02292263610316], [53.0, 17.022160664819953], [54.0, 23.475757575757566], [55.0, 21.384146341463424], [56.0, 17.453865336658367], [57.0, 18.195121951219495], [58.0, 18.664974619289342], [59.0, 19.575250836120393], [60.0, 20.317733990147772], [61.0, 22.42857142857141], [62.0, 19.766917293233078], [63.0, 21.452196382428927], [64.0, 20.12436548223349], [65.0, 22.86363636363636], [66.0, 25.6484375], [67.0, 22.838274932614546], [68.0, 21.514986376021795], [69.0, 22.812658227848104], [70.0, 25.23291925465838], [71.0, 23.969187675070014], [72.0, 21.74934725848563], [73.0, 24.217821782178227], [74.0, 23.596256684491973], [75.0, 26.56793478260869], [76.0, 25.072463768115924], [77.0, 21.863402061855663], [78.0, 24.603399433427768], [79.0, 26.232941176470607], [80.0, 26.464566929133845], [81.0, 25.614361702127656], [82.0, 26.328981723237593], [83.0, 28.925373134328375], [84.0, 28.047353760445677], [85.0, 30.808353808353807], [86.0, 28.81384248210024], [87.0, 25.32880434782608], [88.0, 29.321621621621635], [89.0, 26.21409214092141], [90.0, 30.00240963855422], [91.0, 26.696378830083567], [92.0, 28.436754176610975], [93.0, 27.336986301369855], [94.0, 29.907621247113145], [95.0, 27.633416458852867], [96.0, 28.408376963350765], [97.0, 29.14322250639388], [98.0, 28.439205955334998], [99.0, 30.905963302752287], [100.0, 31.323607427055688], [101.0, 31.827195467422086], [102.0, 30.362467866323914], [103.0, 28.272040302266994], [104.0, 30.18108108108105], [105.0, 37.38207547169807], [106.0, 26.80738786279684], [107.0, 33.41888619854723], [108.0, 34.8486997635934], [109.0, 30.979797979797965], [110.0, 36.3129973474801], [111.0, 36.30023640661941], [112.0, 35.95897435897433], [113.0, 35.32975871313675], [114.0, 41.383838383838345], [115.0, 38.844327176781015], [116.0, 41.25619834710747], [117.0, 38.569794050343276], [118.0, 36.226700251889156], [119.0, 33.27118644067798], [120.0, 40.33774834437088], [121.0, 33.33795013850414], [122.0, 44.85416666666666], [123.0, 39.6624685138539], [124.0, 35.00537634408601], [125.0, 39.55376344086023], [126.0, 36.689342403628096], [127.0, 35.596306068601585], [128.0, 39.574257425742594], [129.0, 38.2987012987013], [130.0, 42.958762886597896], [131.0, 51.05263157894739], [132.0, 37.65526315789475], [133.0, 37.82719546742209], [134.0, 46.84977578475339], [135.0, 40.594805194805204], [136.0, 33.647696476964754], [137.0, 44.12250000000002], [138.0, 43.376590330788794], [139.0, 38.4727793696275], [140.0, 43.22380952380954], [141.0, 40.237974683544344], [142.0, 52.77922077922079], [143.0, 44.20147420147421], [144.0, 46.95454545454543], [145.0, 46.459595959595966], [146.0, 42.601648351648386], [147.0, 44.06862745098042], [148.0, 52.39265536723161], [149.0, 45.80676328502411], [150.0, 34.80112044817927], [151.0, 58.05555555555557], [152.0, 47.11793611793609], [153.0, 51.20198675496693], [154.0, 48.48356807511735], [155.0, 44.060000000000024], [156.0, 53.68542199488488], [157.0, 33.647928994082875], [158.0, 54.6594202898551], [159.0, 64.36194895591649], [160.0, 34.27627627627629], [161.0, 52.52644230769235], [162.0, 40.724517906336104], [163.0, 61.97186700767265], [164.0, 47.503937007874015], [165.0, 64.5893719806764], [166.0, 43.269461077844305], [167.0, 66.07838479809975], [168.0, 39.39739413680781], [169.0, 60.17380352644834], [170.0, 48.3821339950372], [171.0, 57.22047244094491], [172.0, 58.77192982456139], [173.0, 49.04113110539846], [174.0, 56.26119402985075], [175.0, 64.10440835266819], [176.0, 55.44386422976501], [177.0, 39.1947674418605], [178.0, 58.478155339805774], [179.0, 58.7610837438424], [180.0, 45.12250712250712], [181.0, 57.28498727735369], [182.0, 56.36124401913881], [183.0, 72.36567164179098], [184.0, 56.09840425531912], [185.0, 58.33497536945812], [186.0, 57.186157517899794], [187.0, 55.05337078651689], [188.0, 55.972067039106136], [189.0, 69.19555555555559], [190.0, 50.96858638743455], [191.0, 56.12041884816754], [192.0, 48.65775401069521], [193.0, 68.58700696055686], [194.0, 45.14722222222218], [195.0, 66.396674584323], [196.0, 58.48342541436464], [197.0, 58.06106870229004], [198.0, 73.73842592592598], [199.0, 55.7989417989418], [200.0, 55.52592592592592], [201.0, 66.92857142857146], [202.0, 55.72099447513812], [203.0, 57.43589743589745], [204.0, 73.17162471395875], [205.0, 54.54268292682925], [206.0, 66.14009661835749], [207.0, 66.7423887587822], [208.0, 63.777227722772274], [209.0, 48.55786350148368], [210.0, 78.86352941176479], [211.0, 54.57179487179486], [212.0, 58.26285714285717], [213.0, 82.38620689655181], [214.0, 58.29040404040408], [215.0, 60.698060941828295], [216.0, 73.9244332493702], [217.0, 67.29974160206717], [218.0, 72.74074074074072], [219.0, 79.36729857819907], [220.0, 45.371069182389896], [221.0, 59.41909814323607], [222.0, 80.52705882352943], [223.0, 62.15633423180597], [224.0, 72.36565096952907], [225.0, 78.21218961625279], [226.0, 53.07435897435899], [227.0, 76.26799007444166], [228.0, 57.29120879120879], [229.0, 85.78502415458938], [230.0, 56.55525606469], [231.0, 73.74396135265695], [232.0, 66.8668407310705], [233.0, 77.43333333333331], [234.0, 67.00261096605742], [235.0, 91.13084112149544], [236.0, 45.17771084337347], [237.0, 61.3623978201635], [238.0, 71.47282608695647], [239.0, 70.64615384615385], [240.0, 74.8756218905473], [241.0, 76.39480519480519], [242.0, 90.06218905472635], [243.0, 73.79674796747973], [244.0, 84.86180904522617], [245.0, 64.55699481865287], [246.0, 86.0719602977667], [247.0, 89.83497536945815], [248.0, 57.165789473684214], [249.0, 64.11111111111109], [250.0, 79.17574257425737], [251.0, 107.96078431372538], [252.0, 71.11849710982666], [253.0, 70.57668711656446], [254.0, 76.72183908045983], [255.0, 93.96593673965937], [257.0, 64.2088772845953], [256.0, 68.07183908045977], [258.0, 82.92059553349873], [259.0, 65.55405405405403], [260.0, 74.6807387862796], [261.0, 83.66831683168314], [262.0, 76.58168316831691], [263.0, 80.78461538461542], [264.0, 82.34020618556703], [270.0, 57.874285714285726], [271.0, 71.2038834951457], [268.0, 102.83710407239818], [269.0, 73.74777448071222], [265.0, 86.51902173913041], [266.0, 87.07808564231733], [267.0, 113.14918414918414], [273.0, 79.01023017902811], [272.0, 67.03439153439149], [274.0, 125.02428256070637], [275.0, 99.50663129973476], [276.0, 60.78816199376947], [277.0, 70.15571776155717], [278.0, 75.54114713216967], [279.0, 89.38356164383562], [280.0, 137.73781902552207], [286.0, 92.46910755148741], [287.0, 86.65030674846616], [284.0, 79.06122448979599], [285.0, 75.70179948586112], [281.0, 78.608024691358], [282.0, 60.19533527696791], [283.0, 77.87380952380957], [289.0, 91.20863309352514], [288.0, 89.43309002433095], [290.0, 85.37172774869111], [291.0, 89.20671834625317], [292.0, 90.74811083123424], [293.0, 151.95056179775275], [294.0, 86.10479041916159], [295.0, 63.71348314606746], [296.0, 77.05384615384614], [302.0, 102.61809045226128], [303.0, 91.40203562340966], [300.0, 83.65609756097554], [301.0, 84.53968253968259], [297.0, 82.02173913043482], [298.0, 84.34482758620695], [299.0, 97.79648241206024], [305.0, 103.71098265895951], [304.0, 94.71313672922243], [306.0, 112.15638766519824], [307.0, 82.35877862595422], [308.0, 82.27089337175791], [309.0, 85.77336448598139], [310.0, 113.51538461538466], [311.0, 88.0493150684931], [312.0, 83.39841688654353], [318.0, 99.25183374083134], [319.0, 100.04381443298966], [316.0, 102.25679012345674], [317.0, 91.30555555555561], [313.0, 108.9581005586592], [314.0, 115.87186629526465], [315.0, 99.97323600973237], [321.0, 98.97814207650278], [320.0, 98.1876675603217], [322.0, 94.41842105263164], [323.0, 100.20918367346931], [324.0, 103.00755667506294], [325.0, 115.63466666666665], [326.0, 104.6575682382134], [327.0, 101.73521850899746], [328.0, 102.78005115089506], [334.0, 108.7051282051282], [335.0, 98.0274314214464], [332.0, 106.25449871465301], [333.0, 107.57840616966574], [329.0, 100.85215053763447], [330.0, 99.49100257069405], [331.0, 100.5074257425742], [337.0, 100.29339853300732], [336.0, 100.8708791208791], [338.0, 112.8656330749354], [339.0, 94.66913580246917], [340.0, 104.35410764872529], [341.0, 102.42548076923072], [342.0, 107.76674937965262], [343.0, 104.18733509234826], [344.0, 106.46529562982008], [350.0, 113.63010204081635], [351.0, 102.50128534704369], [348.0, 111.99406528189903], [349.0, 128.51036269430045], [345.0, 109.04325699745544], [346.0, 109.4108108108108], [347.0, 107.47880299251872], [353.0, 104.48812664907646], [352.0, 114.20698924731188], [354.0, 112.23846153846145], [355.0, 106.75789473684213], [356.0, 107.63981042654032], [357.0, 117.61031518624634], [358.0, 120.33417721518997], [359.0, 114.69047619047622], [360.0, 107.33159268929506], [366.0, 104.0484261501211], [367.0, 127.30348258706464], [364.0, 123.88520408163268], [365.0, 119.06469002695414], [361.0, 109.4470899470899], [362.0, 115.87469879518072], [363.0, 108.94334277620389], [369.0, 107.14545454545453], [368.0, 110.75968992248062], [370.0, 105.87192118226594], [371.0, 116.8912466843501], [372.0, 124.40874035989714], [373.0, 113.48329048843192], [374.0, 108.16120906801014], [375.0, 123.92225201072385], [376.0, 110.26004728132389], [382.0, 125.08997429305916], [383.0, 115.70277078085648], [380.0, 118.98404255319146], [381.0, 123.02806122448983], [377.0, 103.61055276381916], [378.0, 117.3575581395349], [379.0, 119.33663366336636], [385.0, 121.7670886075949], [384.0, 123.73126614987098], [386.0, 116.68286445012788], [387.0, 119.33164556962019], [388.0, 115.73316062176167], [389.0, 123.69949494949493], [390.0, 131.3368421052632], [391.0, 115.32558139534885], [392.0, 120.07160493827168], [398.0, 119.13730569948187], [399.0, 120.1370558375634], [396.0, 136.03248259860803], [397.0, 127.54078549848943], [393.0, 119.75132275132277], [394.0, 124.1938775510205], [395.0, 117.65775401069519], [401.0, 134.58823529411762], [400.0, 118.31017369727047], [402.0, 122.95939086294408], [403.0, 126.38847117794491], [404.0, 112.97010869565212], [405.0, 125.95563139931738], [406.0, 200.61369193154025], [407.0, 171.611111111111], [408.0, 120.14973262032086], [414.0, 134.47721179624654], [415.0, 132.8194774346794], [412.0, 134.51364764267987], [413.0, 127.61111111111103], [409.0, 122.26861702127664], [410.0, 123.07199999999997], [411.0, 113.23157894736848], [417.0, 127.26595744680854], [416.0, 134.34920634920647], [418.0, 138.19098143236073], [419.0, 126.77777777777774], [420.0, 141.66047745358088], [421.0, 134.70270270270248], [422.0, 144.50139275766006], [423.0, 135.9441624365483], [424.0, 133.60606060606068], [430.0, 142.3019390581718], [431.0, 126.32565789473682], [428.0, 137.63476070528955], [429.0, 143.3106267029972], [425.0, 139.46493506493513], [426.0, 134.28682170542618], [427.0, 132.57364341085267], [433.0, 140.82386363636363], [432.0, 147.47276688453158], [434.0, 130.58690176322412], [435.0, 140.40561224489787], [436.0, 144.7241379310346], [437.0, 133.75661375661375], [438.0, 140.34426229508205], [439.0, 126.65940054495921], [440.0, 135.53960396039597], [446.0, 153.6855345911949], [447.0, 169.97682119205285], [444.0, 146.69491525423732], [445.0, 148.5880503144653], [441.0, 134.92583120204594], [442.0, 150.19571045576407], [443.0, 144.36708860759498], [449.0, 165.06269592476485], [448.0, 158.49844236760129], [450.0, 173.7280966767373], [451.0, 164.77388535031844], [452.0, 163.78723404255314], [453.0, 181.72187500000015], [454.0, 174.53943217665605], [455.0, 175.51582278480998], [456.0, 176.10397553516825], [462.0, 161.0599369085174], [463.0, 164.84558823529406], [460.0, 133.3022113022113], [461.0, 143.31052631578947], [457.0, 171.92655367231623], [458.0, 156.42473118279585], [459.0, 146.77165354330714], [465.0, 145.07042253521126], [464.0, 138.37745098039218], [466.0, 146.59493670886093], [467.0, 142.55583756345172], [468.0, 135.43444730077135], [469.0, 200.3258426966292], [470.0, 151.7967741935485], [471.0, 140.60704607046077], [472.0, 148.45822784810127], [478.0, 157.43686868686876], [479.0, 146.71989528795802], [476.0, 141.9693877551022], [477.0, 145.85470085470078], [473.0, 151.7908496732025], [474.0, 163.55555555555583], [475.0, 135.8666666666667], [481.0, 147.80462724935722], [480.0, 152.18933333333325], [482.0, 149.10714285714292], [483.0, 148.06122448979582], [484.0, 158.58441558441552], [485.0, 146.93899204244036], [486.0, 149.0803108808291], [487.0, 141.56041131105397], [488.0, 162.8605898123323], [494.0, 157.78779840848804], [495.0, 158.51891891891896], [492.0, 158.41920374707266], [493.0, 150.7265193370166], [489.0, 155.68421052631572], [490.0, 169.03514376996807], [491.0, 163.36340852130328], [497.0, 149.91556728232203], [496.0, 166.6784741144414], [498.0, 152.04477611940302], [499.0, 160.0534351145039], [500.0, 164.6062322946176], [501.0, 153.6442307692309], [502.0, 155.02645502645507], [503.0, 160.53562005277038], [504.0, 155.25954198473275], [510.0, 163.09183673469386], [511.0, 152.7896103896104], [508.0, 158.48655913978487], [509.0, 168.54395604395611], [505.0, 171.83557951482484], [506.0, 147.5459459459461], [507.0, 162.09523809523813], [515.0, 168.6171875000001], [512.0, 161.53405994550408], [526.0, 165.41333333333324], [527.0, 163.05236907730685], [524.0, 169.56388888888887], [525.0, 169.95115681233938], [522.0, 157.19220779220782], [523.0, 161.84109589041086], [513.0, 162.30526315789476], [514.0, 160.52061855670107], [516.0, 155.17174515235448], [517.0, 165.28232189973636], [518.0, 164.76288659793815], [519.0, 167.87500000000003], [528.0, 161.60054347826068], [542.0, 191.25000000000003], [543.0, 164.24064171122996], [540.0, 174.54938271604942], [541.0, 194.91938997821347], [538.0, 166.65909090909102], [539.0, 162.4235294117647], [536.0, 180.1196808510639], [537.0, 166.2556962025319], [529.0, 169.41129032258075], [530.0, 178.34748010610085], [531.0, 156.8296296296294], [532.0, 163.11111111111123], [533.0, 180.11640211640224], [534.0, 169.01030927835052], [535.0, 172.1125654450261], [520.0, 172.29339853300726], [521.0, 174.27192982456143], [547.0, 155.391304347826], [544.0, 165.09810126582275], [558.0, 183.62857142857146], [559.0, 171.03448275862058], [556.0, 177.98108108108102], [557.0, 175.83957219251323], [554.0, 173.60372340425536], [555.0, 187.00542005420047], [545.0, 175.9547511312217], [546.0, 176.67042253521132], [548.0, 178.34057971014485], [549.0, 168.57644110275663], [550.0, 192.9466019417474], [551.0, 158.70725388601042], [560.0, 187.97883597883595], [574.0, 184.18925831202048], [575.0, 177.91576086956525], [572.0, 189.46684350132628], [573.0, 190.9260273972603], [570.0, 175.77984084880632], [571.0, 190.97478991596645], [568.0, 193.33942558746733], [569.0, 186.01612903225802], [561.0, 178.57241379310355], [562.0, 194.70125786163527], [563.0, 177.94230769230776], [564.0, 183.8515406162465], [565.0, 169.63526570048313], [566.0, 175.92663043478285], [567.0, 174.3259052924792], [552.0, 180.71944444444443], [553.0, 193.89473684210537], [579.0, 190.9228571428571], [576.0, 182.51351351351352], [590.0, 190.5316804407714], [591.0, 186.68965517241378], [588.0, 186.89002557544757], [589.0, 183.66753246753237], [586.0, 194.9787234042553], [587.0, 185.47197640117997], [577.0, 176.42359249329775], [578.0, 189.58530183727032], [580.0, 192.0530503978781], [581.0, 185.21932114882503], [582.0, 192.36870026525196], [583.0, 189.26944444444456], [592.0, 195.38020833333334], [606.0, 209.34110787171994], [607.0, 209.59999999999994], [604.0, 173.53562005277055], [605.0, 184.7202216066482], [602.0, 192.31534090909074], [603.0, 219.87002652519885], [600.0, 198.44110275689246], [601.0, 186.75741239892199], [593.0, 194.40691489361703], [594.0, 183.53034300791555], [595.0, 187.25284090909093], [596.0, 207.17808219178082], [597.0, 192.38726790450914], [598.0, 206.5691056910569], [599.0, 192.96198830409364], [584.0, 192.44623655913983], [585.0, 187.93667546174146], [611.0, 232.71565495207642], [608.0, 229.1019108280254], [622.0, 225.39522546419093], [623.0, 220.79411764705884], [620.0, 236.4158415841583], [621.0, 257.9371069182387], [618.0, 256.9164179104475], [619.0, 229.18691588785057], [609.0, 226.8601823708206], [610.0, 232.48181818181814], [612.0, 227.0198675496689], [613.0, 247.51147540983607], [614.0, 226.3900928792571], [615.0, 241.6125], [624.0, 192.807894736842], [638.0, 214.59821428571428], [639.0, 222.50793650793653], [636.0, 216.3472222222223], [637.0, 206.27873563218392], [634.0, 206.42603550295854], [635.0, 218.48275862068965], [632.0, 201.27341772151902], [633.0, 210.17548746518088], [625.0, 200.68245125348196], [626.0, 196.13008130081312], [627.0, 206.76392572944283], [628.0, 209.45504087193453], [629.0, 193.91549295774632], [630.0, 212.4251968503937], [631.0, 212.21937321937338], [616.0, 233.77551020408157], [617.0, 235.66051660516612], [643.0, 215.89544235924927], [640.0, 205.36193029490605], [654.0, 228.12068965517238], [655.0, 221.03763440860234], [652.0, 209.18947368421055], [653.0, 212.2808398950133], [650.0, 216.5854341736695], [651.0, 203.5706371191136], [641.0, 209.87862796833772], [642.0, 214.10724637681156], [644.0, 212.13440860215056], [645.0, 202.22641509433961], [646.0, 227.86651583710426], [647.0, 214.74909090909085], [656.0, 211.51498637602174], [670.0, 230.3402366863904], [671.0, 229.41443850267396], [668.0, 207.5741239892182], [669.0, 211.06149732620324], [666.0, 205.9104046242773], [667.0, 231.0767195767195], [664.0, 220.40326975476847], [665.0, 217.2231182795698], [657.0, 209.46831955922863], [658.0, 221.03693181818187], [659.0, 221.3060686015832], [660.0, 222.59322033898317], [661.0, 208.07731958762872], [662.0, 223.69125683060105], [663.0, 218.37822349570217], [648.0, 204.37730870712406], [649.0, 199.72432432432439], [675.0, 242.33798882681552], [672.0, 220.3102493074792], [686.0, 230.00746268656715], [687.0, 261.69660194174776], [684.0, 231.29838709677418], [685.0, 224.19436619718303], [682.0, 221.30410958904102], [683.0, 215.10326086956513], [673.0, 229.5641791044776], [674.0, 231.8906249999999], [676.0, 228.91935483870964], [677.0, 224.80913978494624], [678.0, 212.02941176470588], [679.0, 225.46685082872943], [688.0, 215.9438202247191], [702.0, 233.36612021857934], [703.0, 234.33795013850414], [700.0, 231.78028169014078], [701.0, 228.45429362880887], [698.0, 229.85393258426953], [699.0, 233.9864498644987], [696.0, 233.2303664921466], [697.0, 248.75070821529755], [689.0, 243.23142857142847], [690.0, 228.0777777777778], [691.0, 246.91812865497081], [692.0, 235.5329512893982], [693.0, 238.3688760806917], [694.0, 226.12073490813646], [695.0, 222.5327380952381], [680.0, 232.40793201133138], [681.0, 228.98891966759004], [707.0, 230.49299719887946], [704.0, 236.92876712328766], [718.0, 246.7960893854748], [719.0, 234.35072463768125], [716.0, 248.92287234042544], [717.0, 239.5558659217879], [714.0, 250.49142857142863], [715.0, 244.38271604938265], [705.0, 241.6201117318435], [706.0, 233.0849315068493], [708.0, 231.09189189189183], [709.0, 240.20224719101125], [710.0, 233.45945945945945], [711.0, 223.22471910112355], [720.0, 239.60869565217374], [734.0, 238.49577464788752], [735.0, 245.46380697050927], [732.0, 238.32131147540971], [733.0, 249.3174603174603], [730.0, 247.74125874125863], [731.0, 244.11656441717804], [728.0, 212.4482758620689], [729.0, 224.95380434782612], [721.0, 253.7750759878418], [722.0, 235.38759689922486], [723.0, 230.35465116279067], [724.0, 248.87500000000006], [725.0, 310.74759615384625], [726.0, 312.1024096385544], [727.0, 162.75312499999995], [712.0, 233.4676056338029], [713.0, 245.59279778393352], [739.0, 243.91966759002773], [736.0, 237.43554006968643], [750.0, 255.57248157248148], [751.0, 248.79019073569484], [748.0, 240.5043988269794], [749.0, 264.8983606557378], [746.0, 264.2913165266108], [747.0, 261.28651685393265], [737.0, 269.07161803713547], [738.0, 265.65204678362545], [740.0, 247.77158774373265], [741.0, 247.0921787709497], [742.0, 251.91525423728805], [743.0, 255.1460674157302], [752.0, 260.3257142857143], [766.0, 294.53242320819083], [767.0, 320.36280487804885], [764.0, 300.02539682539674], [765.0, 275.4864864864863], [762.0, 296.97704918032775], [763.0, 316.7847682119205], [760.0, 272.8168168168167], [761.0, 282.0166112956808], [753.0, 243.27988338192418], [754.0, 247.18904109589033], [755.0, 253.1487603305784], [756.0, 267.74316939890747], [757.0, 249.22356495468284], [758.0, 256.0975609756097], [759.0, 271.8904109589042], [744.0, 245.93142857142846], [745.0, 245.34332425068123], [771.0, 305.9184397163121], [768.0, 298.57877813504786], [782.0, 262.5835616438357], [783.0, 253.81408450704242], [780.0, 268.5106382978722], [781.0, 273.07163323782254], [778.0, 253.72162162162164], [779.0, 248.59076923076918], [769.0, 301.6945337620579], [770.0, 292.4], [772.0, 307.9289772727272], [773.0, 283.13421052631537], [774.0, 255.41456582633026], [775.0, 256.382857142857], [784.0, 269.4412607449858], [798.0, 280.29745042492937], [799.0, 260.90725806451616], [796.0, 271.1480362537766], [797.0, 273.2314285714282], [794.0, 281.19944598337963], [795.0, 269.10372340425556], [792.0, 274.1047297297296], [793.0, 293.4841498559076], [785.0, 271.92307692307696], [786.0, 264.6253602305475], [787.0, 266.7534626038782], [788.0, 277.832807570978], [789.0, 266.111111111111], [790.0, 267.99726775956276], [791.0, 263.82080924855484], [776.0, 262.21246458923514], [777.0, 294.4914285714282], [803.0, 273.26857142857153], [800.0, 305.32794457274775], [814.0, 293.64723032069986], [815.0, 282.98895027624343], [812.0, 275.4927953890491], [813.0, 288.18429003021134], [810.0, 276.6847826086953], [811.0, 277.0862068965517], [801.0, 249.2548476454294], [802.0, 272.8068181818182], [804.0, 271.94017094017113], [805.0, 282.7951807228916], [806.0, 284.16253443526176], [807.0, 277.7944444444445], [816.0, 279.3739130434781], [830.0, 285.47112462006066], [831.0, 296.7451523545705], [828.0, 282.147727272727], [829.0, 285.7908309455587], [826.0, 289.8753894080996], [827.0, 291.43442622950835], [824.0, 270.7765957446807], [825.0, 277.8554913294798], [817.0, 270.5190615835779], [818.0, 285.32692307692326], [819.0, 269.00305810397566], [820.0, 299.5327380952381], [821.0, 300.2448979591837], [822.0, 283.38662790697646], [823.0, 294.1797101449275], [808.0, 272.85552407932005], [809.0, 276.71257485029946], [835.0, 293.456338028169], [832.0, 282.71732522796344], [846.0, 299.52083333333337], [847.0, 302.722033898305], [844.0, 289.70879120879124], [845.0, 307.6265822784809], [842.0, 293.7065527065527], [843.0, 288.70606060606053], [833.0, 295.34933333333345], [834.0, 279.3030303030303], [836.0, 289.23446327683587], [837.0, 283.82420749279555], [838.0, 285.811046511628], [839.0, 294.5060240963853], [848.0, 321.67761194029833], [862.0, 294.2163742690056], [863.0, 312.368580060423], [860.0, 303.04776119403004], [861.0, 297.1960784313723], [858.0, 293.5027932960891], [859.0, 289.112676056338], [856.0, 302.63068181818176], [857.0, 307.11647727272725], [849.0, 314.33333333333337], [850.0, 300.88674033149147], [851.0, 294.68361581920925], [852.0, 291.0030120481929], [853.0, 300.9287833827893], [854.0, 308.56011730205284], [855.0, 303.625396825397], [840.0, 300.3256484149856], [841.0, 291.73011363636357], [867.0, 302.36842105263145], [864.0, 303.18750000000006], [878.0, 303.2823529411762], [879.0, 313.6991643454036], [876.0, 301.8961748633883], [877.0, 310.85403726708074], [874.0, 316.42937853107344], [875.0, 307.0773638968483], [865.0, 297.9788519637468], [866.0, 299.00283286118975], [868.0, 296.60113960113955], [869.0, 309.093655589124], [870.0, 294.57750759878417], [871.0, 311.34366197183084], [880.0, 309.8242424242425], [894.0, 324.96048632218833], [895.0, 317.8660968660966], [892.0, 364.37931034482773], [893.0, 350.0499999999999], [890.0, 370.0430463576162], [891.0, 349.1800643086815], [888.0, 355.19863013698637], [889.0, 364.9870967741937], [881.0, 308.7283582089553], [882.0, 320.219020172911], [883.0, 308.16713881019825], [884.0, 307.1583577712613], [885.0, 298.2083333333336], [886.0, 316.07971014492756], [887.0, 339.2583892617448], [872.0, 305.08529411764727], [873.0, 303.9734513274333], [899.0, 349.3040293040293], [896.0, 322.118811881188], [910.0, 361.9900332225913], [911.0, 361.47094801223244], [908.0, 380.5771812080541], [909.0, 368.5916398713826], [906.0, 377.2245614035088], [907.0, 379.1199999999999], [897.0, 333.26934984520136], [898.0, 334.0350877192984], [900.0, 377.6086956521739], [901.0, 392.75757575757586], [902.0, 399.08510638297895], [903.0, 404.7559523809521], [912.0, 337.8407821229049], [926.0, 376.7163636363632], [927.0, 391.45652173913027], [924.0, 335.9584775086508], [925.0, 351.5704225352112], [922.0, 319.7902735562309], [923.0, 316.08823529411796], [920.0, 326.79876160990693], [921.0, 340.09714285714296], [913.0, 338.31578947368433], [914.0, 310.9260355029584], [915.0, 328.74183976261105], [916.0, 316.2921686746988], [917.0, 326.39669421487565], [918.0, 322.6529411764708], [919.0, 324.32544378698236], [904.0, 379.57288135593217], [905.0, 368.70422535211264], [931.0, 381.315602836879], [928.0, 393.53697749196147], [942.0, 327.06325301204816], [943.0, 325.421787709497], [940.0, 336.3661971830987], [941.0, 329.12903225806474], [938.0, 340.8228228228227], [939.0, 345.62619808306687], [929.0, 382.03846153846155], [930.0, 390.60139860139856], [932.0, 396.516447368421], [933.0, 376.2727272727269], [934.0, 381.8920863309353], [935.0, 385.97212543553997], [944.0, 334.70796460176996], [958.0, 374.54385964912274], [959.0, 408.5016949152542], [956.0, 381.3003300330033], [957.0, 389.7254901960784], [954.0, 389.9362416107383], [955.0, 391.5809859154933], [952.0, 387.8386075949364], [953.0, 383.43508771929805], [945.0, 342.8306709265173], [946.0, 358.0160771704182], [947.0, 371.12267657992567], [948.0, 378.6826568265682], [949.0, 404.28040540540525], [950.0, 385.2362459546928], [951.0, 396.2652329749101], [936.0, 392.28478964401273], [937.0, 358.55826558265585], [963.0, 361.04411764705895], [960.0, 387.3554817275749], [974.0, 353.1588235294115], [975.0, 343.39296187683277], [972.0, 339.3975903614459], [973.0, 350.9707602339181], [970.0, 343.4257641921397], [971.0, 338.6552795031055], [961.0, 408.78859060402675], [962.0, 364.289552238806], [964.0, 359.0767045454546], [965.0, 342.4868035190617], [966.0, 343.0755813953487], [967.0, 337.7185628742518], [976.0, 339.7191358024691], [990.0, 365.0803382663846], [991.0, 355.3411078717201], [988.0, 348.6404833836859], [989.0, 358.5412371134021], [986.0, 346.2499999999999], [987.0, 353.3361344537814], [984.0, 343.2937853107346], [985.0, 354.24316109422466], [977.0, 357.3070175438596], [978.0, 343.287833827893], [979.0, 350.12827988338194], [980.0, 353.066455696203], [981.0, 351.1183098591548], [982.0, 358.3790087463556], [983.0, 351.7117117117117], [968.0, 347.50147492625354], [969.0, 342.1286307053942], [995.0, 357.53779069767444], [992.0, 346.5420560747664], [993.0, 362.95], [994.0, 345.5097493036213], [996.0, 356.68639053254446], [997.0, 356.6325966850828], [998.0, 366.0321637426899], [999.0, 348.1424501424503], [1000.0, 388.43345496704546]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[923.9799543196021, 355.34494363961767]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 1000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 868979.2, "minX": 1.6274958E12, "maxY": 5315303.316666666, "series": [{"data": [[1.62749586E12, 2173230.8], [1.62749616E12, 1812061.75], [1.62749622E12, 1789741.7], [1.62749652E12, 1795874.4833333334], [1.62749658E12, 1798796.2166666666], [1.62749592E12, 1909563.3], [1.62749598E12, 1843106.6333333333], [1.62749628E12, 1789802.4666666666], [1.62749634E12, 1771903.0833333333], [1.62749664E12, 1789978.6166666667], [1.6274967E12, 1026916.3333333334], [1.62749604E12, 1791002.3666666667], [1.6274961E12, 1785766.6333333333], [1.6274964E12, 1792242.15], [1.62749646E12, 1793359.5333333334], [1.6274958E12, 868979.2]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.62749586E12, 5315303.316666666], [1.62749616E12, 4432206.05], [1.62749622E12, 4377575.016666667], [1.62749652E12, 4392585.733333333], [1.62749658E12, 4399735.05], [1.62749592E12, 4670469.133333334], [1.62749598E12, 4508142.616666666], [1.62749628E12, 4377774.4], [1.62749634E12, 4333938.55], [1.62749664E12, 4378173.166666667], [1.6274967E12, 2511774.2666666666], [1.62749604E12, 4380679.7], [1.6274961E12, 4367862.2], [1.6274964E12, 4383727.416666667], [1.62749646E12, 4386433.333333333], [1.6274958E12, 2125340.8833333333]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6274967E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 37.746639505742735, "minX": 1.6274958E12, "maxY": 394.3143003608122, "series": [{"data": [[1.62749586E12, 149.83797846857732], [1.62749616E12, 385.3912934508083], [1.62749622E12, 390.3480795632685], [1.62749652E12, 389.1599509778452], [1.62749658E12, 388.38488479739334], [1.62749592E12, 336.0442514575669], [1.62749598E12, 378.94812128410587], [1.62749628E12, 390.4262635332096], [1.62749634E12, 394.3143003608122], [1.62749664E12, 389.9770411814498], [1.6274967E12, 390.56184795427674], [1.62749604E12, 389.85744287962353], [1.6274961E12, 391.3441192581654], [1.6274964E12, 389.53628537085086], [1.62749646E12, 389.51991558442023], [1.6274958E12, 37.746639505742735]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6274967E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 34.67825026468517, "minX": 1.6274958E12, "maxY": 391.1052399823883, "series": [{"data": [[1.62749586E12, 147.20417874616157], [1.62749616E12, 382.11449999035887], [1.62749622E12, 387.0240550722613], [1.62749652E12, 385.8539256627013], [1.62749658E12, 385.0959816659872], [1.62749592E12, 332.94321591491223], [1.62749598E12, 375.7305288962746], [1.62749628E12, 387.09484957317864], [1.62749634E12, 391.1052399823883], [1.62749664E12, 386.6523453256138], [1.6274967E12, 387.241631134896], [1.62749604E12, 386.66615950792504], [1.6274961E12, 388.0011998852258], [1.6274964E12, 386.2167765829603], [1.62749646E12, 386.2227337662344], [1.6274958E12, 34.67825026468517]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6274967E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.05464032896106755, "minX": 1.6274958E12, "maxY": 0.11669730080220392, "series": [{"data": [[1.62749586E12, 0.11669730080220392], [1.62749616E12, 0.059958742215966775], [1.62749622E12, 0.057304036072848945], [1.62749652E12, 0.05516937282772202], [1.62749658E12, 0.05908058031812624], [1.62749592E12, 0.08390456907276864], [1.62749598E12, 0.06748466257668682], [1.62749628E12, 0.05464032896106755], [1.62749634E12, 0.08166564798201899], [1.62749664E12, 0.061459892004423956], [1.6274967E12, 0.055508935861380324], [1.62749604E12, 0.07802442164397348], [1.6274961E12, 0.06414169079479327], [1.6274964E12, 0.06327279815470585], [1.62749646E12, 0.05884415584415559], [1.6274958E12, 0.09924011954380353]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6274967E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 3.0, "minX": 1.6274958E12, "maxY": 10502.0, "series": [{"data": [[1.62749586E12, 2124.0], [1.62749616E12, 2709.0], [1.62749622E12, 1870.0], [1.62749652E12, 2801.0], [1.62749658E12, 3136.0], [1.62749592E12, 1949.0], [1.62749598E12, 1801.0], [1.62749628E12, 1690.0], [1.62749634E12, 9960.0], [1.62749664E12, 1849.0], [1.6274967E12, 1864.0], [1.62749604E12, 10502.0], [1.6274961E12, 1833.0], [1.6274964E12, 1699.0], [1.62749646E12, 1601.0], [1.6274958E12, 908.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.62749586E12, 366.0], [1.62749616E12, 545.0], [1.62749622E12, 538.0], [1.62749652E12, 522.0], [1.62749658E12, 533.0], [1.62749592E12, 503.0], [1.62749598E12, 506.0], [1.62749628E12, 559.0], [1.62749634E12, 560.0], [1.62749664E12, 529.0], [1.6274967E12, 530.0], [1.62749604E12, 508.0], [1.6274961E12, 521.0], [1.6274964E12, 526.0], [1.62749646E12, 512.0], [1.6274958E12, 154.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.62749586E12, 685.0], [1.62749616E12, 820.9800000000032], [1.62749622E12, 851.9800000000032], [1.62749652E12, 782.0], [1.62749658E12, 795.9900000000016], [1.62749592E12, 756.0], [1.62749598E12, 764.0], [1.62749628E12, 818.9900000000016], [1.62749634E12, 849.0], [1.62749664E12, 788.9900000000016], [1.6274967E12, 797.0], [1.62749604E12, 772.9900000000016], [1.6274961E12, 782.9900000000016], [1.6274964E12, 792.0], [1.62749646E12, 786.0], [1.6274958E12, 369.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.62749586E12, 478.0], [1.62749616E12, 630.0], [1.62749622E12, 637.0], [1.62749652E12, 599.9500000000007], [1.62749658E12, 614.0], [1.62749592E12, 573.9500000000007], [1.62749598E12, 577.0], [1.62749628E12, 641.0], [1.62749634E12, 642.0], [1.62749664E12, 606.9500000000007], [1.6274967E12, 623.0], [1.62749604E12, 588.0], [1.6274961E12, 598.0], [1.6274964E12, 609.9500000000007], [1.62749646E12, 596.0], [1.6274958E12, 217.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.62749586E12, 7.0], [1.62749616E12, 22.0], [1.62749622E12, 9.0], [1.62749652E12, 9.0], [1.62749658E12, 10.0], [1.62749592E12, 9.0], [1.62749598E12, 11.0], [1.62749628E12, 12.0], [1.62749634E12, 10.0], [1.62749664E12, 11.0], [1.6274967E12, 12.0], [1.62749604E12, 10.0], [1.6274961E12, 8.0], [1.6274964E12, 10.0], [1.62749646E12, 75.0], [1.6274958E12, 3.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.62749586E12, 175.0], [1.62749616E12, 351.0], [1.62749622E12, 343.0], [1.62749652E12, 341.0], [1.62749658E12, 344.0], [1.62749592E12, 343.0], [1.62749598E12, 340.0], [1.62749628E12, 353.0], [1.62749634E12, 345.0], [1.62749664E12, 346.0], [1.6274967E12, 351.0], [1.62749604E12, 352.0], [1.6274961E12, 356.0], [1.6274964E12, 352.0], [1.62749646E12, 343.0], [1.6274958E12, 25.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6274967E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 8.0, "minX": 321.0, "maxY": 464.0, "series": [{"data": [[321.0, 10.0], [1104.0, 356.0], [1439.0, 8.0], [1633.0, 10.0], [1799.0, 340.0], [2014.0, 9.0], [2146.0, 291.0], [2160.0, 464.0], [2186.0, 384.0], [2240.0, 265.0], [2180.0, 347.0], [2292.0, 289.0], [2300.0, 387.0], [2414.0, 343.0], [2412.0, 345.0], [2416.0, 347.0], [2394.0, 343.0], [2388.0, 344.0], [2392.0, 351.5], [2406.0, 346.0], [2352.0, 364.0], [2336.0, 367.0], [2348.0, 372.0], [2322.0, 387.0], [2314.0, 364.0], [2312.0, 346.0], [2362.0, 349.0], [2356.0, 364.0], [2318.0, 369.0], [2402.0, 358.0], [2404.0, 346.0], [2354.0, 341.0], [2398.0, 348.0], [2396.0, 343.0], [2408.0, 346.0], [2410.0, 346.0], [2426.0, 345.0], [2424.0, 343.0], [2422.0, 347.0], [2376.0, 365.0], [2374.0, 292.0], [2378.0, 384.0], [2384.0, 375.0], [2380.0, 348.0], [2428.0, 344.0], [2430.0, 345.0], [2370.0, 363.0], [2420.0, 353.0], [2418.0, 346.0], [2532.0, 341.0], [2528.0, 167.5], [2470.0, 344.0], [2464.0, 346.0], [2468.0, 345.0], [2478.0, 336.0], [2482.0, 346.0], [2484.0, 347.0], [2488.0, 342.0], [2472.0, 343.0], [2474.0, 344.0], [2476.0, 343.0], [2554.0, 232.0], [2552.0, 357.0], [2550.0, 334.0], [2556.0, 339.0], [2558.0, 344.0], [2496.0, 339.0], [2498.0, 357.0], [2530.0, 347.0], [2538.0, 362.0], [2536.0, 346.0], [2546.0, 344.0], [2544.0, 350.0], [2540.0, 339.0], [2542.0, 344.0], [2502.0, 339.0], [2504.0, 262.0], [2506.0, 349.0], [2526.0, 343.0], [2522.0, 344.0], [2518.0, 344.0], [2520.0, 343.0], [2508.0, 339.0], [2512.0, 276.0], [2514.0, 362.0], [2524.0, 346.0], [2454.0, 339.0], [2456.0, 363.0], [2458.0, 346.0], [2448.0, 343.0], [2450.0, 344.0], [2446.0, 344.0], [2434.0, 364.0], [2432.0, 343.0], [2438.0, 346.0], [2440.0, 346.0], [2436.0, 348.0], [2442.0, 346.0], [2444.0, 339.0], [2492.0, 342.0], [2490.0, 343.0], [2494.0, 341.0], [2670.0, 296.5], [2672.0, 342.0], [2666.0, 315.0], [2668.0, 314.0], [2626.0, 334.0], [2686.0, 322.0], [2628.0, 328.0], [2638.0, 341.0], [2636.0, 338.0], [2632.0, 323.0], [2630.0, 347.0], [2652.0, 321.0], [2654.0, 339.0], [2640.0, 341.0], [2650.0, 339.0], [2616.0, 344.0], [2610.0, 341.0], [2614.0, 343.0], [2594.0, 338.0], [2598.0, 346.0], [2596.0, 341.0], [2592.0, 336.0], [2684.0, 320.0], [2576.0, 349.0], [2564.0, 353.0], [2566.0, 338.0], [2570.0, 357.0], [2562.0, 355.0], [2620.0, 339.0], [2618.0, 334.0], [2622.0, 343.0], [2560.0, 337.0], [2582.0, 348.0], [2580.0, 349.0], [2578.0, 344.0], [2662.0, 315.0], [2586.0, 336.0], [2590.0, 361.0], [2658.0, 339.0], [2660.0, 314.0], [2680.0, 343.0], [2682.0, 338.0], [2676.0, 342.0], [2674.0, 340.0], [2678.0, 342.0], [2708.0, 309.0], [2766.0, 232.0], [2790.0, 288.0], [2788.0, 354.0], [2792.0, 352.0], [2768.0, 316.0], [2772.0, 340.0], [2782.0, 328.0], [2774.0, 345.0], [2770.0, 337.0], [2714.0, 350.0], [2712.0, 344.0], [2710.0, 355.0], [2706.0, 345.0], [2704.0, 314.0], [2694.0, 343.0], [2692.0, 333.0], [2688.0, 315.0], [2690.0, 309.0], [2744.0, 303.0], [2742.0, 313.0], [2740.0, 310.0], [2736.0, 339.0], [2746.0, 328.5], [2730.0, 331.0], [2726.0, 301.0], [2724.0, 303.0], [2728.0, 342.0], [2722.0, 345.0], [2720.0, 347.5], [2732.0, 304.0], [2750.0, 309.0], [2748.0, 305.0], [2800.0, 299.0], [2798.0, 350.0], [2794.0, 258.0], [2784.0, 339.0], [2716.0, 342.5], [2718.0, 307.0], [2764.0, 349.0], [2762.0, 322.5], [2756.0, 318.0], [2754.0, 305.0], [2752.0, 305.0], [2760.0, 325.5], [2758.0, 352.0], [2808.0, 318.0], [2812.0, 344.0], [2840.0, 229.0], [2932.0, 194.0], [2818.0, 295.0], [2820.0, 304.0], [2828.0, 343.0], [2896.0, 156.0], [2900.0, 230.0], [2914.0, 218.0], [2930.0, 209.0], [2882.0, 230.0], [2974.0, 16.0], [3036.0, 18.0], [3028.0, 175.0], [2978.0, 74.0], [3026.0, 162.0], [3056.0, 149.0], [3054.0, 160.0], [2956.0, 169.0], [2968.0, 174.0], [2962.0, 181.0], [3136.0, 30.0], [3164.0, 28.0], [3180.0, 83.0], [3074.0, 79.0], [3172.0, 103.0], [3122.0, 79.0], [3146.0, 105.0], [3228.0, 46.0], [3220.0, 28.0], [3210.0, 20.0], [3212.0, 77.0], [3276.0, 28.0], [3270.0, 48.0], [3266.0, 23.0], [3280.0, 22.0], [3262.0, 24.0], [3254.0, 25.0], [3286.0, 21.0], [3248.0, 23.0], [3292.0, 30.0], [3246.0, 58.0], [3442.0, 190.5], [2267.0, 378.0], [2299.0, 360.0], [2271.0, 348.0], [2209.0, 373.0], [2303.0, 397.0], [2417.0, 362.0], [2387.0, 339.0], [2415.0, 342.0], [2413.0, 346.0], [2389.0, 353.0], [2347.0, 366.0], [2337.0, 356.0], [2339.0, 375.0], [2331.0, 362.0], [2403.0, 347.0], [2335.0, 369.0], [2405.0, 345.0], [2323.0, 402.0], [2349.0, 372.0], [2367.0, 366.0], [2353.0, 366.0], [2397.0, 362.0], [2399.0, 343.0], [2395.0, 355.0], [2407.0, 362.0], [2411.0, 346.0], [2409.0, 345.0], [2421.0, 347.0], [2425.0, 347.0], [2423.0, 344.0], [2431.0, 345.0], [2371.0, 370.0], [2373.0, 215.0], [2379.0, 396.0], [2383.0, 348.0], [2381.0, 345.0], [2429.0, 344.0], [2427.0, 348.0], [2419.0, 346.0], [2539.0, 339.0], [2551.0, 330.0], [2489.0, 333.0], [2465.0, 337.0], [2467.0, 348.0], [2471.0, 349.0], [2469.0, 350.0], [2477.0, 350.0], [2479.0, 354.0], [2487.0, 348.0], [2485.0, 344.0], [2483.0, 338.0], [2475.0, 345.0], [2473.0, 344.0], [2553.0, 349.0], [2557.0, 345.0], [2555.0, 348.0], [2559.0, 344.0], [2499.0, 345.0], [2497.0, 346.0], [2537.0, 343.0], [2529.0, 345.0], [2545.0, 343.0], [2543.0, 344.0], [2525.0, 347.0], [2527.0, 346.0], [2515.0, 355.0], [2521.0, 328.0], [2523.0, 345.0], [2517.0, 341.0], [2519.0, 351.0], [2459.0, 355.0], [2461.0, 338.0], [2457.0, 392.0], [2453.0, 345.0], [2445.0, 340.0], [2449.0, 357.0], [2447.0, 378.0], [2435.0, 341.0], [2437.0, 341.0], [2433.0, 344.0], [2495.0, 356.0], [2439.0, 350.0], [2443.0, 347.0], [2441.0, 342.0], [2493.0, 344.0], [2501.0, 341.0], [2513.0, 339.0], [2505.0, 342.0], [2503.0, 341.0], [2585.0, 345.0], [2671.0, 358.0], [2669.0, 358.0], [2667.0, 353.0], [2659.0, 320.0], [2661.0, 340.0], [2663.0, 339.0], [2687.0, 334.0], [2627.0, 332.0], [2625.0, 356.0], [2631.0, 336.0], [2629.0, 348.0], [2633.0, 339.5], [2637.0, 350.0], [2653.0, 341.0], [2651.0, 325.0], [2645.0, 330.0], [2641.0, 339.0], [2647.0, 329.0], [2649.0, 339.0], [2639.0, 340.0], [2609.0, 338.0], [2623.0, 337.0], [2621.0, 341.0], [2617.0, 341.0], [2615.0, 326.0], [2613.0, 358.0], [2611.0, 336.0], [2599.0, 341.0], [2597.0, 338.0], [2595.0, 343.0], [2601.0, 339.0], [2607.0, 338.0], [2603.0, 343.0], [2605.0, 341.0], [2593.0, 345.0], [2565.0, 345.0], [2561.0, 340.0], [2563.0, 354.0], [2573.0, 342.0], [2571.0, 343.0], [2569.0, 345.0], [2575.0, 344.0], [2577.0, 340.0], [2579.0, 357.0], [2581.0, 359.0], [2583.0, 336.0], [2657.0, 341.0], [2589.0, 321.0], [2591.0, 340.0], [2683.0, 346.0], [2685.0, 342.5], [2679.0, 358.0], [2713.0, 312.0], [2793.0, 253.0], [2797.0, 321.0], [2715.0, 302.0], [2789.0, 332.0], [2767.0, 310.0], [2769.0, 339.0], [2771.0, 351.0], [2773.0, 315.0], [2779.0, 341.0], [2775.0, 338.0], [2777.0, 347.5], [2711.0, 315.0], [2709.0, 314.0], [2707.0, 326.0], [2695.0, 341.0], [2693.0, 343.0], [2703.0, 359.0], [2697.0, 355.0], [2699.0, 331.0], [2701.0, 304.0], [2691.0, 244.0], [2751.0, 339.0], [2689.0, 313.0], [2743.0, 314.0], [2741.0, 305.0], [2739.0, 333.0], [2737.0, 335.5], [2735.0, 342.0], [2749.0, 316.0], [2747.0, 326.0], [2745.0, 323.0], [2733.0, 317.0], [2725.0, 310.0], [2729.0, 316.0], [2727.0, 352.0], [2721.0, 309.0], [2723.0, 338.0], [2731.0, 325.0], [2803.0, 293.0], [2799.0, 317.0], [2717.0, 327.0], [2719.0, 307.0], [2805.0, 302.0], [2765.0, 316.0], [2763.0, 348.0], [2757.0, 316.0], [2753.0, 337.0], [2755.0, 318.0], [2761.0, 305.0], [2809.0, 299.0], [2837.0, 249.0], [2831.0, 102.0], [2829.0, 346.0], [2859.0, 239.0], [2867.0, 229.0], [2827.0, 349.0], [2855.0, 240.0], [2857.0, 244.0], [2909.0, 222.0], [2895.0, 166.0], [2925.0, 177.0], [2943.0, 194.0], [2917.0, 198.0], [2931.0, 253.0], [2889.0, 226.0], [3061.0, 154.0], [3071.0, 127.0], [2983.0, 155.0], [3021.0, 159.0], [3173.0, 111.0], [3193.0, 51.0], [3157.0, 19.0], [3167.0, 99.0], [3089.0, 107.0], [3077.0, 137.0], [3103.0, 132.0], [3179.0, 95.0], [3105.0, 120.0], [3119.0, 124.0], [3115.0, 130.0], [3135.0, 110.0], [3195.0, 20.0], [3149.0, 43.0], [3137.0, 100.0], [3163.0, 52.0], [3181.0, 74.0], [3185.0, 95.0], [3225.0, 61.0], [3201.0, 64.0], [3213.0, 57.0], [3303.0, 21.0], [3223.0, 29.0], [3227.0, 46.0], [3265.0, 61.0], [3321.0, 29.0], [3257.0, 33.0], [3261.0, 39.0], [3253.0, 26.0], [3237.0, 27.0], [3233.0, 41.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 3442.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 7.0, "minX": 321.0, "maxY": 461.0, "series": [{"data": [[321.0, 8.0], [1104.0, 353.0], [1439.0, 7.0], [1633.0, 8.0], [1799.0, 336.0], [2014.0, 8.0], [2146.0, 287.0], [2160.0, 461.0], [2186.0, 380.5], [2240.0, 259.0], [2180.0, 344.0], [2292.0, 286.0], [2300.0, 384.0], [2414.0, 339.0], [2412.0, 342.0], [2416.0, 343.0], [2394.0, 339.0], [2388.0, 340.0], [2392.0, 349.0], [2406.0, 343.0], [2352.0, 360.0], [2336.0, 363.0], [2348.0, 369.0], [2322.0, 384.0], [2314.0, 360.0], [2312.0, 343.0], [2362.0, 345.0], [2356.0, 361.0], [2318.0, 365.0], [2402.0, 355.0], [2404.0, 342.0], [2354.0, 337.0], [2398.0, 344.0], [2396.0, 339.0], [2408.0, 342.5], [2410.0, 342.0], [2426.0, 342.0], [2424.0, 340.0], [2422.0, 343.0], [2376.0, 361.0], [2374.0, 288.0], [2378.0, 380.0], [2384.0, 372.0], [2380.0, 344.0], [2428.0, 341.0], [2430.0, 342.0], [2370.0, 360.0], [2420.0, 350.0], [2418.0, 343.0], [2532.0, 337.0], [2528.0, 162.5], [2470.0, 341.0], [2464.0, 343.0], [2468.0, 342.0], [2478.0, 333.0], [2482.0, 342.0], [2484.0, 344.0], [2488.0, 340.0], [2472.0, 339.0], [2474.0, 341.0], [2476.0, 339.0], [2554.0, 229.0], [2552.0, 353.0], [2550.0, 330.0], [2556.0, 336.0], [2558.0, 340.0], [2496.0, 336.0], [2498.0, 354.0], [2530.0, 344.0], [2538.0, 359.0], [2536.0, 344.0], [2546.0, 340.0], [2544.0, 347.0], [2540.0, 335.0], [2542.0, 341.0], [2502.0, 335.0], [2504.0, 257.0], [2506.0, 346.0], [2526.0, 339.0], [2522.0, 340.0], [2518.0, 340.0], [2520.0, 339.0], [2508.0, 335.0], [2512.0, 272.0], [2514.0, 358.0], [2524.0, 342.0], [2454.0, 335.0], [2456.0, 360.0], [2458.0, 342.0], [2448.0, 339.0], [2450.0, 341.0], [2446.0, 340.0], [2434.0, 360.0], [2432.0, 340.0], [2438.0, 343.0], [2440.0, 343.0], [2436.0, 345.0], [2442.0, 342.0], [2444.0, 335.0], [2492.0, 338.0], [2490.0, 339.0], [2494.0, 338.0], [2670.0, 293.0], [2672.0, 339.0], [2666.0, 312.0], [2668.0, 311.0], [2626.0, 331.0], [2686.0, 318.0], [2628.0, 324.0], [2638.0, 337.0], [2636.0, 334.0], [2632.0, 319.0], [2630.0, 345.0], [2652.0, 317.0], [2654.0, 336.0], [2640.0, 338.0], [2650.0, 335.0], [2616.0, 341.0], [2610.0, 338.0], [2614.0, 339.0], [2594.0, 334.0], [2598.0, 342.0], [2596.0, 337.0], [2592.0, 332.0], [2684.0, 317.0], [2576.0, 345.0], [2564.0, 350.0], [2566.0, 334.0], [2570.0, 353.5], [2562.0, 352.0], [2620.0, 335.0], [2618.0, 330.0], [2622.0, 340.0], [2560.0, 334.0], [2582.0, 343.0], [2580.0, 347.0], [2578.0, 340.0], [2662.0, 312.0], [2586.0, 332.0], [2590.0, 357.0], [2658.0, 336.0], [2660.0, 310.0], [2680.0, 339.0], [2682.0, 334.5], [2676.0, 338.0], [2674.0, 336.0], [2678.0, 338.0], [2708.0, 306.0], [2766.0, 229.0], [2790.0, 285.0], [2788.0, 351.0], [2792.0, 349.0], [2768.0, 313.0], [2772.0, 337.0], [2782.0, 325.0], [2774.0, 341.0], [2770.0, 334.0], [2714.0, 347.0], [2712.0, 340.0], [2710.0, 352.0], [2706.0, 341.0], [2704.0, 310.0], [2694.0, 340.0], [2692.0, 330.0], [2688.0, 312.5], [2690.0, 306.0], [2744.0, 300.0], [2742.0, 309.0], [2740.0, 307.0], [2736.0, 335.0], [2746.0, 325.5], [2730.0, 327.0], [2726.0, 298.0], [2724.0, 300.0], [2728.0, 338.0], [2722.0, 341.0], [2720.0, 345.0], [2732.0, 301.0], [2750.0, 307.0], [2748.0, 302.0], [2800.0, 296.0], [2798.0, 347.0], [2794.0, 255.0], [2784.0, 336.0], [2716.0, 339.5], [2718.0, 305.0], [2764.0, 346.0], [2762.0, 320.5], [2756.0, 314.0], [2754.0, 302.0], [2752.0, 302.0], [2760.0, 323.0], [2758.0, 349.0], [2808.0, 314.0], [2812.0, 341.0], [2840.0, 226.0], [2932.0, 191.0], [2818.0, 292.5], [2820.0, 300.0], [2828.0, 340.0], [2896.0, 153.0], [2900.0, 227.0], [2914.0, 216.0], [2930.0, 206.0], [2882.0, 227.0], [2974.0, 13.0], [3036.0, 14.0], [3028.0, 172.0], [2978.0, 72.0], [3026.0, 159.0], [3056.0, 146.0], [3054.0, 157.0], [2956.0, 166.0], [2968.0, 171.0], [2962.0, 178.0], [3136.0, 26.0], [3164.0, 25.0], [3180.0, 80.0], [3074.0, 76.0], [3172.0, 101.0], [3122.0, 77.0], [3146.0, 103.0], [3228.0, 43.0], [3220.0, 25.0], [3210.0, 17.0], [3212.0, 74.0], [3276.0, 25.0], [3270.0, 45.0], [3266.0, 20.0], [3280.0, 19.0], [3262.0, 20.0], [3254.0, 21.0], [3286.0, 17.0], [3248.0, 20.0], [3292.0, 27.0], [3246.0, 55.0], [3442.0, 188.0], [2267.0, 373.0], [2299.0, 356.0], [2271.0, 345.0], [2209.0, 369.0], [2303.0, 392.0], [2417.0, 359.0], [2387.0, 335.0], [2415.0, 338.0], [2413.0, 342.0], [2389.0, 350.0], [2347.0, 363.0], [2337.0, 352.0], [2339.0, 372.0], [2331.0, 358.0], [2403.0, 343.0], [2335.0, 365.0], [2405.0, 341.0], [2323.0, 399.0], [2349.0, 369.0], [2367.0, 360.0], [2353.0, 362.0], [2397.0, 358.0], [2399.0, 339.0], [2395.0, 351.0], [2407.0, 358.0], [2411.0, 343.0], [2409.0, 341.0], [2421.0, 344.0], [2425.0, 343.0], [2423.0, 341.0], [2431.0, 342.0], [2371.0, 366.0], [2373.0, 212.0], [2379.0, 392.0], [2383.0, 344.0], [2381.0, 341.0], [2429.0, 341.0], [2427.0, 345.0], [2419.0, 343.0], [2539.0, 335.0], [2551.0, 327.0], [2489.0, 330.0], [2465.0, 334.0], [2467.0, 344.0], [2471.0, 345.0], [2469.0, 346.0], [2477.0, 347.0], [2479.0, 350.0], [2487.0, 344.0], [2485.0, 340.0], [2483.0, 335.0], [2475.0, 341.0], [2473.0, 340.0], [2553.0, 345.0], [2557.0, 342.0], [2555.0, 345.0], [2559.0, 340.0], [2499.0, 342.0], [2497.0, 342.0], [2537.0, 340.0], [2529.0, 341.0], [2545.0, 340.0], [2543.0, 341.0], [2525.0, 344.0], [2527.0, 343.0], [2515.0, 352.0], [2521.0, 325.0], [2523.0, 342.0], [2517.0, 337.0], [2519.0, 348.0], [2459.0, 351.0], [2461.0, 335.0], [2457.0, 388.0], [2453.0, 341.0], [2445.0, 336.5], [2449.0, 353.0], [2447.0, 375.0], [2435.0, 338.0], [2437.0, 338.0], [2433.0, 340.0], [2495.0, 353.0], [2439.0, 346.0], [2443.0, 343.0], [2441.0, 338.0], [2493.0, 340.0], [2501.0, 338.0], [2513.0, 336.0], [2505.0, 338.0], [2503.0, 337.0], [2585.0, 342.0], [2671.0, 355.0], [2669.0, 355.0], [2667.0, 349.0], [2659.0, 316.0], [2661.0, 336.0], [2663.0, 335.0], [2687.0, 331.0], [2627.0, 328.0], [2625.0, 353.0], [2631.0, 333.0], [2629.0, 346.0], [2633.0, 336.0], [2637.0, 346.0], [2653.0, 337.0], [2651.0, 322.0], [2645.0, 327.0], [2641.0, 335.0], [2647.0, 326.0], [2649.0, 336.0], [2639.0, 337.0], [2609.0, 335.0], [2623.0, 334.0], [2621.0, 338.0], [2617.0, 337.0], [2615.0, 322.0], [2613.0, 354.0], [2611.0, 333.0], [2599.0, 337.0], [2597.0, 334.0], [2595.0, 339.0], [2601.0, 335.0], [2607.0, 335.0], [2603.0, 339.0], [2605.0, 338.0], [2593.0, 342.0], [2565.0, 341.0], [2561.0, 337.0], [2563.0, 351.0], [2573.0, 338.0], [2571.0, 338.0], [2569.0, 341.0], [2575.0, 340.0], [2577.0, 337.0], [2579.0, 354.0], [2581.0, 356.0], [2583.0, 333.0], [2657.0, 337.0], [2589.0, 318.0], [2591.0, 337.0], [2683.0, 342.0], [2685.0, 338.0], [2679.0, 355.0], [2713.0, 310.0], [2793.0, 250.0], [2797.0, 318.0], [2715.0, 299.0], [2789.0, 329.0], [2767.0, 307.0], [2769.0, 336.0], [2771.0, 349.0], [2773.0, 312.0], [2779.0, 338.0], [2775.0, 335.0], [2777.0, 344.0], [2711.0, 312.0], [2709.0, 310.0], [2707.0, 322.0], [2695.0, 338.0], [2693.0, 340.0], [2703.0, 355.0], [2697.0, 353.0], [2699.0, 328.0], [2701.0, 301.0], [2691.0, 241.0], [2751.0, 337.0], [2689.0, 309.0], [2743.0, 311.0], [2741.0, 302.0], [2739.0, 328.0], [2737.0, 333.0], [2735.0, 338.0], [2749.0, 312.0], [2747.0, 324.0], [2745.0, 320.0], [2733.0, 314.0], [2725.0, 308.0], [2729.0, 313.0], [2727.0, 350.0], [2721.0, 306.0], [2723.0, 334.0], [2731.0, 322.0], [2803.0, 290.0], [2799.0, 314.0], [2717.0, 324.0], [2719.0, 304.0], [2805.0, 300.0], [2765.0, 313.0], [2763.0, 346.0], [2757.0, 314.0], [2753.0, 334.0], [2755.0, 315.0], [2761.0, 302.0], [2809.0, 297.0], [2837.0, 246.0], [2831.0, 98.0], [2829.0, 344.0], [2859.0, 236.0], [2867.0, 225.0], [2827.0, 346.0], [2855.0, 237.0], [2857.0, 241.0], [2909.0, 218.0], [2895.0, 163.0], [2925.0, 174.0], [2943.0, 191.0], [2917.0, 195.0], [2931.0, 250.0], [2889.0, 223.0], [3061.0, 151.0], [3071.0, 125.0], [2983.0, 152.0], [3021.0, 156.0], [3173.0, 108.0], [3193.0, 49.0], [3157.0, 16.0], [3167.0, 97.0], [3089.0, 103.0], [3077.0, 134.0], [3103.0, 129.0], [3179.0, 92.0], [3105.0, 117.0], [3119.0, 121.0], [3115.0, 128.0], [3135.0, 107.0], [3195.0, 17.0], [3149.0, 40.0], [3137.0, 98.0], [3163.0, 49.0], [3181.0, 71.0], [3185.0, 92.0], [3225.0, 59.0], [3201.0, 61.0], [3213.0, 54.0], [3303.0, 18.0], [3223.0, 26.0], [3227.0, 43.0], [3265.0, 59.0], [3321.0, 25.0], [3257.0, 30.0], [3261.0, 37.0], [3253.0, 23.0], [3237.0, 24.0], [3233.0, 38.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 3442.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 1247.25, "minX": 1.6274958E12, "maxY": 3118.516666666667, "series": [{"data": [[1.62749586E12, 3118.516666666667], [1.62749616E12, 2593.45], [1.62749622E12, 2561.483333333333], [1.62749652E12, 2570.2166666666667], [1.62749658E12, 2574.5], [1.62749592E12, 2737.5666666666666], [1.62749598E12, 2637.883333333333], [1.62749628E12, 2561.5833333333335], [1.62749634E12, 2535.9666666666667], [1.62749664E12, 2561.8333333333335], [1.6274967E12, 1453.0666666666666], [1.62749604E12, 2563.3], [1.6274961E12, 2555.8], [1.6274964E12, 2565.0666666666666], [1.62749646E12, 2566.6833333333334], [1.6274958E12, 1247.25]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6274967E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 1243.6166666666666, "minX": 1.6274958E12, "maxY": 3110.1833333333334, "series": [{"data": [[1.62749586E12, 3110.1833333333334], [1.62749616E12, 2593.45], [1.62749622E12, 2561.483333333333], [1.62749652E12, 2570.266666666667], [1.62749658E12, 2574.45], [1.62749592E12, 2732.866666666667], [1.62749598E12, 2637.883333333333], [1.62749628E12, 2561.6], [1.62749634E12, 2535.95], [1.62749664E12, 2561.8333333333335], [1.6274967E12, 1469.7333333333333], [1.62749604E12, 2563.3], [1.6274961E12, 2555.8], [1.6274964E12, 2565.0833333333335], [1.62749646E12, 2566.6666666666665], [1.6274958E12, 1243.6166666666666]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6274967E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 1243.6166666666666, "minX": 1.6274958E12, "maxY": 3110.1833333333334, "series": [{"data": [[1.62749586E12, 3110.1833333333334], [1.62749616E12, 2593.45], [1.62749622E12, 2561.483333333333], [1.62749652E12, 2570.266666666667], [1.62749658E12, 2574.45], [1.62749592E12, 2732.866666666667], [1.62749598E12, 2637.883333333333], [1.62749628E12, 2561.6], [1.62749634E12, 2535.95], [1.62749664E12, 2561.8333333333335], [1.6274967E12, 1469.7333333333333], [1.62749604E12, 2563.3], [1.6274961E12, 2555.8], [1.6274964E12, 2565.0833333333335], [1.62749646E12, 2566.6666666666665], [1.6274958E12, 1243.6166666666666]], "isOverall": false, "label": "HTTP Request-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6274967E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 1243.6166666666666, "minX": 1.6274958E12, "maxY": 3110.1833333333334, "series": [{"data": [[1.62749586E12, 3110.1833333333334], [1.62749616E12, 2593.45], [1.62749622E12, 2561.483333333333], [1.62749652E12, 2570.266666666667], [1.62749658E12, 2574.45], [1.62749592E12, 2732.866666666667], [1.62749598E12, 2637.883333333333], [1.62749628E12, 2561.6], [1.62749634E12, 2535.95], [1.62749664E12, 2561.8333333333335], [1.6274967E12, 1469.7333333333333], [1.62749604E12, 2563.3], [1.6274961E12, 2555.8], [1.6274964E12, 2565.0833333333335], [1.62749646E12, 2566.6666666666665], [1.6274958E12, 1243.6166666666666]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6274967E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

